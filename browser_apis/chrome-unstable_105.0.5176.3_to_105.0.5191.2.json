{
  "browser": "chrome-unstable",
  "version": {
    "from": "105.0.5176.3",
    "to": "105.0.5191.2"
  },
  "browserApis": {
    "added": [
      "CSS.highlights",
      "Highlight",
      "Highlight.prototype",
      "Highlight.prototype.add",
      "Highlight.prototype.clear",
      "Highlight.prototype.delete",
      "Highlight.prototype.entries",
      "Highlight.prototype.forEach",
      "Highlight.prototype.has",
      "Highlight.prototype.keys",
      "Highlight.prototype.priority",
      "Highlight.prototype.size",
      "Highlight.prototype.type",
      "Highlight.prototype.values",
      "HighlightRegistry",
      "HighlightRegistry.prototype",
      "HighlightRegistry.prototype.clear",
      "HighlightRegistry.prototype.delete",
      "HighlightRegistry.prototype.entries",
      "HighlightRegistry.prototype.forEach",
      "HighlightRegistry.prototype.get",
      "HighlightRegistry.prototype.has",
      "HighlightRegistry.prototype.keys",
      "HighlightRegistry.prototype.set",
      "HighlightRegistry.prototype.size",
      "HighlightRegistry.prototype.values",
      "Option.prototype.constructor.prototype.onbeforeinput",
      "Option.prototype.constructor.prototype.setHTML",
      "Request.prototype.body",
      "SVGViewElement.prototype.onbeforeinput",
      "Sanitizer",
      "Sanitizer.getDefaultConfiguration",
      "Sanitizer.prototype",
      "Sanitizer.prototype.getConfiguration",
      "TaskController.prototype.abort",
      "TaskController.prototype.constructor",
      "TaskController.prototype.signal",
      "TaskSignal.prototype.aborted",
      "TaskSignal.prototype.constructor",
      "TaskSignal.prototype.constructor.abort",
      "TaskSignal.prototype.constructor.timeout",
      "TaskSignal.prototype.onabort",
      "TaskSignal.prototype.reason",
      "TaskSignal.prototype.throwIfAborted",
      "XMLDocument.prototype.onbeforeinput",
      "onbeforeinput"
    ],
    "removed": [
      "AbortController",
      "AbortController.prototype",
      "AbortController.prototype.abort",
      "AbortController.prototype.signal",
      "AbortSignal",
      "AbortSignal.abort",
      "AbortSignal.prototype",
      "AbortSignal.prototype.aborted",
      "AbortSignal.prototype.onabort",
      "AbortSignal.prototype.reason",
      "AbortSignal.prototype.throwIfAborted",
      "AbortSignal.timeout"
    ]
  }
}