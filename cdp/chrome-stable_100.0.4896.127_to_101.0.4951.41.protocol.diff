--- ./cdp/chrome-stable_100.0.4896.127.protocol.json	2023-01-06 17:16:39.776763529 +0000
+++ ./cdp/chrome-stable_101.0.4951.41.protocol.json	2023-01-06 17:17:03.196930494 +0000
@@ -400,13 +400,6 @@
               "type": "integer"
             },
             {
-              "name": "max_depth",
-              "description": "Deprecated. This parameter has been renamed to `depth`. If depth is not provided, max_depth will be used.",
-              "deprecated": true,
-              "optional": true,
-              "type": "integer"
-            },
-            {
               "name": "frameId",
               "description": "The frame for whose document the AX tree should be retrieved.\nIf omited, the root frame is used.",
               "optional": true,
@@ -984,7 +977,7 @@
           ]
         },
         {
-          "id": "SameSiteCookieExclusionReason",
+          "id": "CookieExclusionReason",
           "type": "string",
           "enum": [
             "ExcludeSameSiteUnspecifiedTreatedAsLax",
@@ -996,7 +989,7 @@
           ]
         },
         {
-          "id": "SameSiteCookieWarningReason",
+          "id": "CookieWarningReason",
           "type": "string",
           "enum": [
             "WarnSameSiteUnspecifiedCrossSiteContext",
@@ -1006,11 +999,12 @@
             "WarnSameSiteStrictCrossDowngradeStrict",
             "WarnSameSiteStrictCrossDowngradeLax",
             "WarnSameSiteLaxCrossDowngradeStrict",
-            "WarnSameSiteLaxCrossDowngradeLax"
+            "WarnSameSiteLaxCrossDowngradeLax",
+            "WarnAttributeValueExceedsMaxSize"
           ]
         },
         {
-          "id": "SameSiteCookieOperation",
+          "id": "CookieOperation",
           "type": "string",
           "enum": [
             "SetCookie",
@@ -1018,7 +1012,7 @@
           ]
         },
         {
-          "id": "SameSiteCookieIssueDetails",
+          "id": "CookieIssueDetails",
           "description": "This information is currently necessary, as the front-end has a difficult\ntime finding a specific cookie. With this, we can convey specific error\ninformation without the cookie.",
           "type": "object",
           "properties": [
@@ -1037,20 +1031,20 @@
               "name": "cookieWarningReasons",
               "type": "array",
               "items": {
-                "$ref": "SameSiteCookieWarningReason"
+                "$ref": "CookieWarningReason"
               }
             },
             {
               "name": "cookieExclusionReasons",
               "type": "array",
               "items": {
-                "$ref": "SameSiteCookieExclusionReason"
+                "$ref": "CookieExclusionReason"
               }
             },
             {
               "name": "operation",
               "description": "Optionally identifies the site-for-cookies and the cookie url, which\nmay be used by the front-end as additional context.",
-              "$ref": "SameSiteCookieOperation"
+              "$ref": "CookieOperation"
             },
             {
               "name": "siteForCookies",
@@ -1573,13 +1567,15 @@
             },
             {
               "name": "message",
-              "description": "The content of the deprecation issue (this won't be translated),\ne.g. \"window.inefficientLegacyStorageMethod will be removed in M97,\naround January 2022. Please use Web Storage or Indexed Database\ninstead. This standard was abandoned in January, 1970. See\nhttps://www.chromestatus.com/feature/5684870116278272 for more details.\"",
+              "description": "The content of an untranslated deprecation issue,\ne.g. \"window.inefficientLegacyStorageMethod will be removed in M97,\naround January 2022. Please use Web Storage or Indexed Database\ninstead. This standard was abandoned in January, 1970. See\nhttps://www.chromestatus.com/feature/5684870116278272 for more details.\"",
               "deprecated": true,
               "optional": true,
               "type": "string"
             },
             {
               "name": "deprecationType",
+              "description": "The id of an untranslated deprecation issue e.g. PrefixedStorageInfo.",
+              "deprecated": true,
               "type": "string"
             }
           ]
@@ -1615,6 +1611,8 @@
             "ClientMetadataHttpNotFound",
             "ClientMetadataNoResponse",
             "ClientMetadataInvalidResponse",
+            "ClientMetadataMissingPrivacyPolicyUrl",
+            "DisabledInSettings",
             "ErrorFetchingSignin",
             "InvalidSigninResponse",
             "AccountsHttpNotFound",
@@ -1648,7 +1646,7 @@
           "description": "A unique identifier for the type of issue. Each type may use one of the\noptional fields in InspectorIssueDetails to convey more specific\ninformation about the kind of issue.",
           "type": "string",
           "enum": [
-            "SameSiteCookieIssue",
+            "CookieIssue",
             "MixedContentIssue",
             "BlockedByResponseIssue",
             "HeavyAdIssue",
@@ -1672,9 +1670,9 @@
           "type": "object",
           "properties": [
             {
-              "name": "sameSiteCookieIssueDetails",
+              "name": "cookieIssueDetails",
               "optional": true,
-              "$ref": "SameSiteCookieIssueDetails"
+              "$ref": "CookieIssueDetails"
             },
             {
               "name": "mixedContentIssueDetails",
@@ -2678,6 +2676,21 @@
           ]
         },
         {
+          "id": "InheritedPseudoElementMatches",
+          "description": "Inherited pseudo element matches from pseudos of an ancestor node.",
+          "type": "object",
+          "properties": [
+            {
+              "name": "pseudoElements",
+              "description": "Matches of pseudo styles from the pseudos of an ancestor node.",
+              "type": "array",
+              "items": {
+                "$ref": "PseudoElementMatches"
+              }
+            }
+          ]
+        },
+        {
           "id": "RuleMatch",
           "description": "Match data for a CSS rule.",
           "type": "object",
@@ -2884,6 +2897,16 @@
               "items": {
                 "$ref": "CSSSupports"
               }
+            },
+            {
+              "name": "layers",
+              "description": "Cascade layer array. Contains the layer hierarchy that this rule belongs to starting\nwith the innermost layer and going outwards.",
+              "experimental": true,
+              "optional": true,
+              "type": "array",
+              "items": {
+                "$ref": "CSSLayer"
+              }
             }
           ]
         },
@@ -3220,6 +3243,36 @@
               "type": "string"
             },
             {
+              "name": "active",
+              "description": "Whether the supports condition is satisfied.",
+              "type": "boolean"
+            },
+            {
+              "name": "range",
+              "description": "The associated rule header range in the enclosing stylesheet (if\navailable).",
+              "optional": true,
+              "$ref": "SourceRange"
+            },
+            {
+              "name": "styleSheetId",
+              "description": "Identifier of the stylesheet containing this object (if exists).",
+              "optional": true,
+              "$ref": "StyleSheetId"
+            }
+          ]
+        },
+        {
+          "id": "CSSLayer",
+          "description": "CSS Layer at-rule descriptor.",
+          "experimental": true,
+          "type": "object",
+          "properties": [
+            {
+              "name": "text",
+              "description": "Layer name.",
+              "type": "string"
+            },
+            {
               "name": "range",
               "description": "The associated rule header range in the enclosing stylesheet (if\navailable).",
               "optional": true,
@@ -3234,6 +3287,33 @@
           ]
         },
         {
+          "id": "CSSLayerData",
+          "description": "CSS Layer data.",
+          "experimental": true,
+          "type": "object",
+          "properties": [
+            {
+              "name": "name",
+              "description": "Layer name.",
+              "type": "string"
+            },
+            {
+              "name": "subLayers",
+              "description": "Direct sub-layers",
+              "optional": true,
+              "type": "array",
+              "items": {
+                "$ref": "CSSLayerData"
+              }
+            },
+            {
+              "name": "order",
+              "description": "Layer order. The order determines the order of the layer in the cascade order.\nA higher number has higher priority in the cascade order.",
+              "type": "number"
+            }
+          ]
+        },
+        {
           "id": "PlatformFontUsage",
           "description": "Information about amount of glyphs that were rendered with given font.",
           "type": "object",
@@ -3635,6 +3715,15 @@
               }
             },
             {
+              "name": "inheritedPseudoElements",
+              "description": "A chain of inherited pseudo element styles (from the immediate node parent up to the DOM tree root).",
+              "optional": true,
+              "type": "array",
+              "items": {
+                "$ref": "InheritedPseudoElementMatches"
+              }
+            },
+            {
               "name": "cssKeyframesRules",
               "description": "A list of CSS keyframed animations matching this node.",
               "optional": true,
@@ -3696,6 +3785,23 @@
           ]
         },
         {
+          "name": "getLayersForNode",
+          "description": "Returns all layers parsed by the rendering engine for the tree scope of a node.\nGiven a DOM element identified by nodeId, getLayersForNode returns the root\nlayer for the nearest ancestor document or shadow root. The layer root contains\nthe full layer tree for the tree scope and their ordering.",
+          "experimental": true,
+          "parameters": [
+            {
+              "name": "nodeId",
+              "$ref": "DOM.NodeId"
+            }
+          ],
+          "returns": [
+            {
+              "name": "rootLayer",
+              "$ref": "CSSLayerData"
+            }
+          ]
+        },
+        {
           "name": "trackComputedStyleUpdates",
           "description": "Starts tracking the given computed styles for updates. The specified array of properties\nreplaces the one previously specified. Pass empty array to disable tracking.\nUse takeComputedStyleUpdates to retrieve the list of nodes that had properties modified.\nThe changes to computed style properties are only tracked for nodes pushed to the front-end\nby the DOM agent. If no changes to the tracked properties occur after the node has been pushed\nto the front-end, no updates will be issued for the node.",
           "experimental": true,
@@ -4436,10 +4542,11 @@
             "scrollbar-corner",
             "resizer",
             "input-list-button",
-            "transition",
-            "transition-container",
-            "transition-old-content",
-            "transition-new-content"
+            "page-transition",
+            "page-transition-container",
+            "page-transition-image-wrapper",
+            "page-transition-outgoing-image",
+            "page-transition-incoming-image"
           ]
         },
         {
@@ -8156,6 +8263,18 @@
               "$ref": "UserAgentMetadata"
             }
           ]
+        },
+        {
+          "name": "setAutomationOverride",
+          "description": "Allows overriding the automation flag.",
+          "experimental": true,
+          "parameters": [
+            {
+              "name": "enabled",
+              "description": "Whether the override should be enabled.",
+              "type": "boolean"
+            }
+          ]
         }
       ],
       "events": [
@@ -14022,6 +14141,7 @@
           "enum": [
             "rgb",
             "hsl",
+            "hwb",
             "hex"
           ]
         },
@@ -14804,6 +14924,7 @@
             "ambient-light-sensor",
             "attribution-reporting",
             "autoplay",
+            "browsing-topics",
             "camera",
             "ch-dpr",
             "ch-device-memory",
@@ -14844,6 +14965,7 @@
             "gyroscope",
             "hid",
             "idle-detection",
+            "interest-cohort",
             "join-ad-interest-group",
             "keyboard-map",
             "magnetometer",
@@ -15831,6 +15953,12 @@
               "name": "reason",
               "description": "Not restored reason",
               "$ref": "BackForwardCacheNotRestoredReason"
+            },
+            {
+              "name": "context",
+              "description": "Context associated with the reason. The meaning of this context is\ndependent on the reason:\n- EmbedderExtensionSentMessageToCachedFrame: the extension ID.",
+              "optional": true,
+              "type": "string"
             }
           ]
         },
