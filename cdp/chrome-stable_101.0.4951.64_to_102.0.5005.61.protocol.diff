--- ./cdp/chrome-stable_101.0.4951.64.protocol.json	2023-01-06 17:17:45.221185971 +0000
+++ ./cdp/chrome-stable_102.0.5005.61.protocol.json	2023-01-06 17:18:05.897339533 +0000
@@ -1441,16 +1441,10 @@
           "enum": [
             "PermissionPolicyDisabled",
             "InvalidAttributionSourceEventId",
-            "InvalidAttributionData",
             "AttributionSourceUntrustworthyOrigin",
             "AttributionUntrustworthyOrigin",
-            "AttributionTriggerDataTooLarge",
-            "AttributionEventSourceTriggerDataTooLarge",
             "InvalidAttributionSourceExpiry",
-            "InvalidAttributionSourcePriority",
-            "InvalidEventSourceTriggerData",
-            "InvalidTriggerPriority",
-            "InvalidTriggerDedupKey"
+            "InvalidAttributionSourcePriority"
           ]
         },
         {
@@ -1552,6 +1546,14 @@
           ]
         },
         {
+          "id": "DeprecationIssueType",
+          "type": "string",
+          "enum": [
+            "DeprecationExample",
+            "Untranslated"
+          ]
+        },
+        {
           "id": "DeprecationIssueDetails",
           "description": "This issue tracks information needed to print a deprecation message.\nThe formatting is inherited from the old console.log version, see more at:\nhttps://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/core/frame/deprecation.cc\nTODO(crbug.com/1264960): Re-work format to add i18n support per:\nhttps://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/public/devtools_protocol/README.md",
           "type": "object",
@@ -1576,7 +1578,12 @@
               "name": "deprecationType",
               "description": "The id of an untranslated deprecation issue e.g. PrefixedStorageInfo.",
               "deprecated": true,
+              "optional": true,
               "type": "string"
+            },
+            {
+              "name": "type",
+              "$ref": "DeprecationIssueType"
             }
           ]
         },
@@ -1605,6 +1612,11 @@
           "enum": [
             "ApprovalDeclined",
             "TooManyRequests",
+            "ManifestListHttpNotFound",
+            "ManifestListNoResponse",
+            "ManifestListInvalidResponse",
+            "ManifestNotInManifestList",
+            "ManifestListTooBig",
             "ManifestHttpNotFound",
             "ManifestNoResponse",
             "ManifestInvalidResponse",
@@ -14930,8 +14942,10 @@
             "ch-device-memory",
             "ch-downlink",
             "ch-ect",
+            "ch-partitioned-cookies",
             "ch-prefers-color-scheme",
             "ch-rtt",
+            "ch-save-data",
             "ch-ua",
             "ch-ua-arch",
             "ch-ua-bitness",
@@ -14947,7 +14961,6 @@
             "ch-viewport-height",
             "ch-viewport-width",
             "ch-width",
-            "ch-partitioned-cookies",
             "clipboard-read",
             "clipboard-write",
             "cross-origin-isolated",
@@ -15640,12 +15653,6 @@
               "description": "The fantasy font-family.",
               "optional": true,
               "type": "string"
-            },
-            {
-              "name": "pictograph",
-              "description": "The pictograph font-family.",
-              "optional": true,
-              "type": "string"
             }
           ]
         },
@@ -15856,6 +15863,7 @@
             "Unknown",
             "ActivationNavigationsDisallowedForBug1234857",
             "ErrorDocument",
+            "FencedFramesEmbedder",
             "WebSocket",
             "WebTransport",
             "WebRTC",
@@ -15989,6 +15997,14 @@
               }
             }
           ]
+        },
+        {
+          "id": "PrerenderFinalStatus",
+          "description": "List of FinalStatus reasons for Prerender2.",
+          "type": "string",
+          "enum": [
+            "Activated"
+          ]
         }
       ],
       "commands": [
@@ -16303,19 +16319,19 @@
           "returns": [
             {
               "name": "layoutViewport",
-              "description": "Deprecated metrics relating to the layout viewport. Can be in DP or in CSS pixels depending on the `enable-use-zoom-for-dsf` flag. Use `cssLayoutViewport` instead.",
+              "description": "Deprecated metrics relating to the layout viewport. Is in device pixels. Use `cssLayoutViewport` instead.",
               "deprecated": true,
               "$ref": "LayoutViewport"
             },
             {
               "name": "visualViewport",
-              "description": "Deprecated metrics relating to the visual viewport. Can be in DP or in CSS pixels depending on the `enable-use-zoom-for-dsf` flag. Use `cssVisualViewport` instead.",
+              "description": "Deprecated metrics relating to the visual viewport. Is in device pixels. Use `cssVisualViewport` instead.",
               "deprecated": true,
               "$ref": "VisualViewport"
             },
             {
               "name": "contentSize",
-              "description": "Deprecated size of scrollable area. Can be in DP or in CSS pixels depending on the `enable-use-zoom-for-dsf` flag. Use `cssContentSize` instead.",
+              "description": "Deprecated size of scrollable area. Is in DP. Use `cssContentSize` instead.",
               "deprecated": true,
               "$ref": "DOM.Rect"
             },
@@ -17536,6 +17552,25 @@
           ]
         },
         {
+          "name": "prerenderAttemptCompleted",
+          "description": "Fired when a prerender attempt is completed.",
+          "parameters": [
+            {
+              "name": "initiatingFrameId",
+              "description": "The frame id of the frame initiating prerendering.",
+              "$ref": "FrameId"
+            },
+            {
+              "name": "prerenderingUrl",
+              "type": "string"
+            },
+            {
+              "name": "finalStatus",
+              "$ref": "PrerenderFinalStatus"
+            }
+          ]
+        },
+        {
           "name": "loadEventFired",
           "parameters": [
             {
@@ -21556,22 +21591,54 @@
           ]
         },
         {
+          "id": "PlayerErrorSourceLocation",
+          "description": "Represents logged source line numbers reported in an error.\nNOTE: file and line are from chromium c++ implementation code, not js.",
+          "type": "object",
+          "properties": [
+            {
+              "name": "file",
+              "type": "string"
+            },
+            {
+              "name": "line",
+              "type": "integer"
+            }
+          ]
+        },
+        {
           "id": "PlayerError",
           "description": "Corresponds to kMediaError",
           "type": "object",
           "properties": [
             {
-              "name": "type",
-              "type": "string",
-              "enum": [
-                "pipeline_error",
-                "media_error"
-              ]
+              "name": "errorType",
+              "type": "string"
             },
             {
-              "name": "errorCode",
-              "description": "When this switches to using media::Status instead of PipelineStatus\nwe can remove \"errorCode\" and replace it with the fields from\na Status instance. This also seems like a duplicate of the error\nlevel enum - there is a todo bug to have that level removed and\nuse this instead. (crbug.com/1068454)",
-              "type": "string"
+              "name": "code",
+              "description": "Code is the numeric enum entry for a specific set of error codes, such\nas PipelineStatusCodes in media/base/pipeline_status.h",
+              "type": "integer"
+            },
+            {
+              "name": "stack",
+              "description": "A trace of where this error was caused / where it passed through.",
+              "type": "array",
+              "items": {
+                "$ref": "PlayerErrorSourceLocation"
+              }
+            },
+            {
+              "name": "cause",
+              "description": "Errors potentially have a root cause error, ie, a DecoderError might be\ncaused by an WindowsError",
+              "type": "array",
+              "items": {
+                "$ref": "PlayerError"
+              }
+            },
+            {
+              "name": "data",
+              "description": "Extra data attached to an error, such as an HRESULT, Video Codec, etc.",
+              "type": "object"
             }
           ]
         }
@@ -23763,6 +23830,52 @@
           "type": "string"
         },
         {
+          "id": "WebDriverValue",
+          "description": "Represents the value serialiazed by the WebDriver BiDi specification\nhttps://w3c.github.io/webdriver-bidi.",
+          "type": "object",
+          "properties": [
+            {
+              "name": "type",
+              "type": "string",
+              "enum": [
+                "undefined",
+                "null",
+                "string",
+                "number",
+                "boolean",
+                "bigint",
+                "regexp",
+                "date",
+                "symbol",
+                "array",
+                "object",
+                "function",
+                "map",
+                "set",
+                "weakmap",
+                "weakset",
+                "error",
+                "proxy",
+                "promise",
+                "typedarray",
+                "arraybuffer",
+                "node",
+                "window"
+              ]
+            },
+            {
+              "name": "value",
+              "optional": true,
+              "type": "any"
+            },
+            {
+              "name": "objectId",
+              "optional": true,
+              "type": "string"
+            }
+          ]
+        },
+        {
           "id": "RemoteObjectId",
           "description": "Unique object identifier.",
           "type": "string"
@@ -23844,6 +23957,13 @@
               "type": "string"
             },
             {
+              "name": "webDriverValue",
+              "description": "WebDriver BiDi representation of the value.",
+              "experimental": true,
+              "optional": true,
+              "$ref": "WebDriverValue"
+            },
+            {
               "name": "objectId",
               "description": "Unique object identifier (for non-primitive values).",
               "optional": true,
@@ -24496,6 +24616,13 @@
               "experimental": true,
               "optional": true,
               "type": "boolean"
+            },
+            {
+              "name": "generateWebDriverValue",
+              "description": "Whether the result should be serialized according to https://w3c.github.io/webdriver-bidi.",
+              "experimental": true,
+              "optional": true,
+              "type": "boolean"
             }
           ],
           "returns": [
@@ -24664,6 +24791,13 @@
               "experimental": true,
               "optional": true,
               "type": "string"
+            },
+            {
+              "name": "generateWebDriverValue",
+              "description": "Whether the result should be serialized according to https://w3c.github.io/webdriver-bidi.",
+              "experimental": true,
+              "optional": true,
+              "type": "boolean"
             }
           ],
           "returns": [
