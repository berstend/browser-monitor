--- ./cdp/chrome-stable_102.0.5005.115.protocol.json	2023-01-06 17:18:26.069476615 +0000
+++ ./cdp/chrome-stable_103.0.5060.53.protocol.json	2023-01-06 17:18:46.537603337 +0000
@@ -1440,11 +1440,9 @@
           "type": "string",
           "enum": [
             "PermissionPolicyDisabled",
-            "InvalidAttributionSourceEventId",
             "AttributionSourceUntrustworthyOrigin",
             "AttributionUntrustworthyOrigin",
-            "InvalidAttributionSourceExpiry",
-            "InvalidAttributionSourcePriority"
+            "InvalidHeader"
           ]
         },
         {
@@ -1549,13 +1547,65 @@
           "id": "DeprecationIssueType",
           "type": "string",
           "enum": [
+            "AuthorizationCoveredByWildcard",
+            "CanRequestURLHTTPContainingNewline",
+            "ChromeLoadTimesConnectionInfo",
+            "ChromeLoadTimesFirstPaintAfterLoadTime",
+            "ChromeLoadTimesWasAlternateProtocolAvailable",
+            "CookieWithTruncatingChar",
+            "CrossOriginAccessBasedOnDocumentDomain",
+            "CrossOriginWindowAlert",
+            "CrossOriginWindowConfirm",
+            "CSSSelectorInternalMediaControlsOverlayCastButton",
+            "CustomCursorIntersectsViewport",
             "DeprecationExample",
-            "Untranslated"
+            "DocumentDomainSettingWithoutOriginAgentClusterHeader",
+            "EventPath",
+            "GeolocationInsecureOrigin",
+            "GeolocationInsecureOriginDeprecatedNotRemoved",
+            "GetUserMediaInsecureOrigin",
+            "HostCandidateAttributeGetter",
+            "InsecurePrivateNetworkSubresourceRequest",
+            "LegacyConstraintGoogIPv6",
+            "LocalCSSFileExtensionRejected",
+            "MediaElementAudioSourceNode",
+            "MediaSourceAbortRemove",
+            "MediaSourceDurationTruncatingBuffered",
+            "NoSysexWebMIDIWithoutPermission",
+            "NotificationInsecureOrigin",
+            "NotificationPermissionRequestedIframe",
+            "ObsoleteWebRtcCipherSuite",
+            "PaymentRequestBasicCard",
+            "PaymentRequestShowWithoutGesture",
+            "PictureSourceSrc",
+            "PrefixedCancelAnimationFrame",
+            "PrefixedRequestAnimationFrame",
+            "PrefixedStorageInfo",
+            "PrefixedVideoDisplayingFullscreen",
+            "PrefixedVideoEnterFullscreen",
+            "PrefixedVideoEnterFullScreen",
+            "PrefixedVideoExitFullscreen",
+            "PrefixedVideoExitFullScreen",
+            "PrefixedVideoSupportsFullscreen",
+            "RangeExpand",
+            "RequestedSubresourceWithEmbeddedCredentials",
+            "RTCConstraintEnableDtlsSrtpFalse",
+            "RTCConstraintEnableDtlsSrtpTrue",
+            "RTCPeerConnectionComplexPlanBSdpUsingDefaultSdpSemantics",
+            "RTCPeerConnectionSdpSemanticsPlanB",
+            "RtcpMuxPolicyNegotiate",
+            "RTPDataChannel",
+            "SharedArrayBufferConstructedWithoutIsolation",
+            "TextToSpeech_DisallowedByAutoplay",
+            "V8SharedArrayBufferConstructedInExtensionWithoutIsolation",
+            "XHRJSONEncodingDetection",
+            "XMLHttpRequestSynchronousInNonWorkerOutsideBeforeUnload",
+            "XRSupportsSession"
           ]
         },
         {
           "id": "DeprecationIssueDetails",
-          "description": "This issue tracks information needed to print a deprecation message.\nThe formatting is inherited from the old console.log version, see more at:\nhttps://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/core/frame/deprecation.cc\nTODO(crbug.com/1264960): Re-work format to add i18n support per:\nhttps://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/public/devtools_protocol/README.md",
+          "description": "This issue tracks information needed to print a deprecation message.\nhttps://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/core/frame/third_party/blink/renderer/core/frame/deprecation/README.md",
           "type": "object",
           "properties": [
             {
@@ -1568,20 +1618,6 @@
               "$ref": "SourceCodeLocation"
             },
             {
-              "name": "message",
-              "description": "The content of an untranslated deprecation issue,\ne.g. \"window.inefficientLegacyStorageMethod will be removed in M97,\naround January 2022. Please use Web Storage or Indexed Database\ninstead. This standard was abandoned in January, 1970. See\nhttps://www.chromestatus.com/feature/5684870116278272 for more details.\"",
-              "deprecated": true,
-              "optional": true,
-              "type": "string"
-            },
-            {
-              "name": "deprecationType",
-              "description": "The id of an untranslated deprecation issue e.g. PrefixedStorageInfo.",
-              "deprecated": true,
-              "optional": true,
-              "type": "string"
-            },
-            {
               "name": "type",
               "$ref": "DeprecationIssueType"
             }
@@ -7332,6 +7368,10 @@
       "experimental": true,
       "types": [
         {
+          "id": "SerializedStorageKey",
+          "type": "string"
+        },
+        {
           "id": "StorageId",
           "description": "DOM Storage identifier.",
           "type": "object",
@@ -7339,9 +7379,16 @@
             {
               "name": "securityOrigin",
               "description": "Security origin for the storage.",
+              "optional": true,
               "type": "string"
             },
             {
+              "name": "storageKey",
+              "description": "Represents a key by which DOM Storage keys its CachedStorageAreas",
+              "optional": true,
+              "$ref": "SerializedStorageKey"
+            },
+            {
               "name": "isLocalStorage",
               "description": "Whether the storage is local storage (not session storage).",
               "type": "boolean"
@@ -7422,6 +7469,21 @@
               "type": "string"
             }
           ]
+        },
+        {
+          "name": "getStorageKeyForFrame",
+          "parameters": [
+            {
+              "name": "frameId",
+              "$ref": "Page.FrameId"
+            }
+          ],
+          "returns": [
+            {
+              "name": "storageKey",
+              "$ref": "SerializedStorageKey"
+            }
+          ]
         }
       ],
       "events": [
@@ -7793,6 +7855,16 @@
             {
               "name": "mobile",
               "type": "boolean"
+            },
+            {
+              "name": "bitness",
+              "optional": true,
+              "type": "string"
+            },
+            {
+              "name": "wow64",
+              "optional": true,
+              "type": "boolean"
             }
           ]
         },
@@ -8333,7 +8405,7 @@
       "commands": [
         {
           "name": "beginFrame",
-          "description": "Sends a BeginFrame to the target and returns when the frame was completed. Optionally captures a\nscreenshot from the resulting frame. Requires that the target was created with enabled\nBeginFrameControl. Designed for use with --run-all-compositor-stages-before-draw, see also\nhttps://goo.gl/3zHXhB for more background.",
+          "description": "Sends a BeginFrame to the target and returns when the frame was completed. Optionally captures a\nscreenshot from the resulting frame. Requires that the target was created with enabled\nBeginFrameControl. Designed for use with --run-all-compositor-stages-before-draw, see also\nhttps://goo.gle/chrome-headless-rendering for more background.",
           "parameters": [
             {
               "name": "frameTimeTicks",
@@ -14942,7 +15014,6 @@
             "ch-device-memory",
             "ch-downlink",
             "ch-ect",
-            "ch-partitioned-cookies",
             "ch-prefers-color-scheme",
             "ch-rtt",
             "ch-save-data",
@@ -14981,6 +15052,7 @@
             "interest-cohort",
             "join-ad-interest-group",
             "keyboard-map",
+            "local-fonts",
             "magnetometer",
             "microphone",
             "midi",
@@ -15653,6 +15725,12 @@
               "description": "The fantasy font-family.",
               "optional": true,
               "type": "string"
+            },
+            {
+              "name": "math",
+              "description": "The math font-family.",
+              "optional": true,
+              "type": "string"
             }
           ]
         },
@@ -15825,7 +15903,6 @@
             "JavaScriptExecution",
             "RendererProcessKilled",
             "RendererProcessCrashed",
-            "GrantedMediaStreamAccess",
             "SchedulerTrackedFeatureUsed",
             "ConflictingBrowsingInstance",
             "CacheFlushed",
@@ -15852,7 +15929,6 @@
             "ForegroundCacheLimit",
             "BrowsingInstanceNotSwapped",
             "BackForwardCacheDisabledForDelegate",
-            "OptInUnloadHeaderNotPresent",
             "UnloadHandlerExistsInMainFrame",
             "UnloadHandlerExistsInSubFrame",
             "ServiceWorkerUnregistration",
@@ -16003,7 +16079,39 @@
           "description": "List of FinalStatus reasons for Prerender2.",
           "type": "string",
           "enum": [
-            "Activated"
+            "Activated",
+            "Destroyed",
+            "LowEndDevice",
+            "CrossOriginRedirect",
+            "CrossOriginNavigation",
+            "InvalidSchemeRedirect",
+            "InvalidSchemeNavigation",
+            "InProgressNavigation",
+            "NavigationRequestBlockedByCsp",
+            "MainFrameNavigation",
+            "MojoBinderPolicy",
+            "RendererProcessCrashed",
+            "RendererProcessKilled",
+            "Download",
+            "TriggerDestroyed",
+            "NavigationNotCommitted",
+            "NavigationBadHttpStatus",
+            "ClientCertRequested",
+            "NavigationRequestNetworkError",
+            "MaxNumOfRunningPrerendersExceeded",
+            "CancelAllHostsForTesting",
+            "DidFailLoad",
+            "Stop",
+            "SslCertificateError",
+            "LoginAuthRequested",
+            "UaChangeRequiresReload",
+            "BlockedByClient",
+            "AudioOutputDeviceRequested",
+            "MixedContent",
+            "TriggerBackgrounded",
+            "EmbedderTriggeredAndSameOriginRedirected",
+            "EmbedderTriggeredAndCrossOriginRedirected",
+            "EmbedderTriggeredAndDestroyed"
           ]
         }
       ],
@@ -16476,7 +16584,7 @@
             },
             {
               "name": "loaderId",
-              "description": "Loader identifier.",
+              "description": "Loader identifier. This is omitted in case of same-document navigation,\nas the previously committed loaderId would not change.",
               "optional": true,
               "$ref": "Network.LoaderId"
             },
@@ -16565,17 +16673,11 @@
             },
             {
               "name": "pageRanges",
-              "description": "Paper ranges to print, e.g., '1-5, 8, 11-13'. Defaults to the empty string, which means\nprint all pages.",
+              "description": "Paper ranges to print, one based, e.g., '1-5, 8, 11-13'. Pages are\nprinted in the document order, not in the order specified, and no\nmore than once.\nDefaults to empty string, which implies the entire document is printed.\nThe page numbers are quietly capped to actual page count of the\ndocument, and ranges beyond the end of the document are ignored.\nIf this results in no pages to print, an error is reported.\nIt is an error to specify a range with start greater than end.",
               "optional": true,
               "type": "string"
             },
             {
-              "name": "ignoreInvalidPageRanges",
-              "description": "Whether to silently ignore invalid but successfully parsed page ranges, such as '3-2'.\nDefaults to false.",
-              "optional": true,
-              "type": "boolean"
-            },
-            {
               "name": "headerTemplate",
               "description": "HTML template for the print header. Should be valid HTML markup with following\nclasses used to inject printing values into them:\n- `date`: formatted print date\n- `title`: document title\n- `url`: document location\n- `pageNumber`: current page number\n- `totalPages`: total pages in the document\n\nFor example, `<span class=title></span>` would generate span containing the title.",
               "optional": true,
@@ -18673,6 +18775,10 @@
       ],
       "types": [
         {
+          "id": "SerializedStorageKey",
+          "type": "string"
+        },
+        {
           "id": "StorageType",
           "description": "Enum of possible storage types.",
           "type": "string",
@@ -21385,7 +21491,15 @@
       "commands": [
         {
           "name": "enable",
-          "description": "Enable the WebAuthn domain and start intercepting credential storage and\nretrieval with a virtual authenticator."
+          "description": "Enable the WebAuthn domain and start intercepting credential storage and\nretrieval with a virtual authenticator.",
+          "parameters": [
+            {
+              "name": "enableUI",
+              "description": "Whether to enable the WebAuthn user interface. Enabling the UI is\nrecommended for debugging and demo purposes, as it is closer to the real\nexperience. Disabling the UI is recommended for automated testing.\nSupported at the embedder's discretion if UI is available.\nDefaults to false.",
+              "optional": true,
+              "type": "boolean"
+            }
+          ]
         },
         {
           "name": "disable",
@@ -21960,6 +22074,13 @@
               "description": "The value being returned, if the function is at return point.",
               "optional": true,
               "$ref": "Runtime.RemoteObject"
+            },
+            {
+              "name": "canBeRestarted",
+              "description": "Valid only while the VM is paused and indicates whether this frame\ncan be restarted or not. Note that a `true` value here does not\nguarantee that Debugger#restartFrame with this CallFrameId will be\nsuccessful, but it is very likely.",
+              "experimental": true,
+              "optional": true,
+              "type": "boolean"
             }
           ]
         },
@@ -22901,7 +23022,7 @@
             },
             {
               "name": "hash",
-              "description": "Content hash of the script.",
+              "description": "Content hash of the script, SHA-256.",
               "type": "string"
             },
             {
@@ -23005,7 +23126,7 @@
             },
             {
               "name": "hash",
-              "description": "Content hash of the script.",
+              "description": "Content hash of the script, SHA-256.",
               "type": "string"
             },
             {
@@ -23279,6 +23400,8 @@
             },
             {
               "name": "treatGlobalObjectsAsRoots",
+              "description": "Deprecated in favor of `exposeInternals`.",
+              "deprecated": true,
               "optional": true,
               "type": "boolean"
             },
@@ -23287,6 +23410,13 @@
               "description": "If true, numerical values are included in the snapshot",
               "optional": true,
               "type": "boolean"
+            },
+            {
+              "name": "exposeInternals",
+              "description": "If true, exposes internals of the snapshot.",
+              "experimental": true,
+              "optional": true,
+              "type": "boolean"
             }
           ]
         },
@@ -23301,7 +23431,8 @@
             },
             {
               "name": "treatGlobalObjectsAsRoots",
-              "description": "If true, a raw snapshot without artificial roots will be generated",
+              "description": "If true, a raw snapshot without artificial roots will be generated.\nDeprecated in favor of `exposeInternals`.",
+              "deprecated": true,
               "optional": true,
               "type": "boolean"
             },
@@ -23310,6 +23441,13 @@
               "description": "If true, numerical values are included in the snapshot",
               "optional": true,
               "type": "boolean"
+            },
+            {
+              "name": "exposeInternals",
+              "description": "If true, exposes internals of the snapshot.",
+              "experimental": true,
+              "optional": true,
+              "type": "boolean"
             }
           ]
         }
@@ -24619,7 +24757,7 @@
             },
             {
               "name": "generateWebDriverValue",
-              "description": "Whether the result should be serialized according to https://w3c.github.io/webdriver-bidi.",
+              "description": "Whether the result should contain `webDriverValue`, serialized according to\nhttps://w3c.github.io/webdriver-bidi. This is mutually exclusive with `returnByValue`, but\nresulting `objectId` is still provided.",
               "experimental": true,
               "optional": true,
               "type": "boolean"
