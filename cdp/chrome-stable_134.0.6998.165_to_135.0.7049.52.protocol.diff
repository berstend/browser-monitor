--- ./cdp/chrome-stable_134.0.6998.165.protocol.json	2025-04-02 01:18:08.062237236 +0000
+++ ./cdp/chrome-stable_135.0.7049.52.protocol.json	2025-04-02 01:18:45.862104364 +0000
@@ -1335,6 +1335,7 @@
             "kInlineViolation",
             "kEvalViolation",
             "kURLViolation",
+            "kSRIViolation",
             "kTrustedTypesSinkViolation",
             "kTrustedTypesPolicyViolation",
             "kWasmEvalViolation"
@@ -1560,6 +1561,32 @@
           ]
         },
         {
+          "id": "SRIMessageSignatureError",
+          "type": "string",
+          "enum": [
+            "MissingSignatureHeader",
+            "MissingSignatureInputHeader",
+            "InvalidSignatureHeader",
+            "InvalidSignatureInputHeader",
+            "SignatureHeaderValueIsNotByteSequence",
+            "SignatureHeaderValueIsParameterized",
+            "SignatureHeaderValueIsIncorrectLength",
+            "SignatureInputHeaderMissingLabel",
+            "SignatureInputHeaderValueNotInnerList",
+            "SignatureInputHeaderValueMissingComponents",
+            "SignatureInputHeaderInvalidComponentType",
+            "SignatureInputHeaderInvalidComponentName",
+            "SignatureInputHeaderInvalidHeaderComponentParameter",
+            "SignatureInputHeaderInvalidDerivedComponentParameter",
+            "SignatureInputHeaderKeyIdLength",
+            "SignatureInputHeaderInvalidParameter",
+            "SignatureInputHeaderMissingRequiredParameters",
+            "ValidationFailedSignatureExpired",
+            "ValidationFailedInvalidLength",
+            "ValidationFailedSignatureMismatch"
+          ]
+        },
+        {
           "id": "AttributionReportingIssueDetails",
           "description": "Details for issues around \"Attribution Reporting API\" usage.\nExplainer: https://github.com/WICG/attribution-reporting-api",
           "type": "object",
@@ -1644,6 +1671,20 @@
           ]
         },
         {
+          "id": "SRIMessageSignatureIssueDetails",
+          "type": "object",
+          "properties": [
+            {
+              "name": "error",
+              "$ref": "SRIMessageSignatureError"
+            },
+            {
+              "name": "request",
+              "$ref": "AffectedRequest"
+            }
+          ]
+        },
+        {
           "id": "GenericIssueErrorType",
           "type": "string",
           "enum": [
@@ -1821,7 +1862,8 @@
             "InvalidFieldsSpecified",
             "RelyingPartyOriginIsOpaque",
             "TypeNotMatching",
-            "UiDismissedNoEmbargo"
+            "UiDismissedNoEmbargo",
+            "CorsError"
           ]
         },
         {
@@ -1887,6 +1929,30 @@
           ]
         },
         {
+          "id": "PartitioningBlobURLInfo",
+          "type": "string",
+          "enum": [
+            "BlockedCrossPartitionFetching",
+            "EnforceNoopenerForNavigation"
+          ]
+        },
+        {
+          "id": "PartitioningBlobURLIssueDetails",
+          "type": "object",
+          "properties": [
+            {
+              "name": "url",
+              "description": "The BlobURL that failed to load.",
+              "type": "string"
+            },
+            {
+              "name": "partitioningBlobURLInfo",
+              "description": "Additional information about the Partitioning Blob URL issue.",
+              "$ref": "PartitioningBlobURLInfo"
+            }
+          ]
+        },
+        {
           "id": "SelectElementAccessibilityIssueReason",
           "type": "string",
           "enum": [
@@ -1995,6 +2061,7 @@
             "CorsIssue",
             "AttributionReportingIssue",
             "QuirksModeIssue",
+            "PartitioningBlobURLIssue",
             "NavigatorUserAgentIssue",
             "GenericIssue",
             "DeprecationIssue",
@@ -2006,7 +2073,8 @@
             "FederatedAuthUserInfoRequestIssue",
             "PropertyRuleIssue",
             "SharedDictionaryIssue",
-            "SelectElementAccessibilityIssue"
+            "SelectElementAccessibilityIssue",
+            "SRIMessageSignatureIssue"
           ]
         },
         {
@@ -2065,6 +2133,11 @@
               "$ref": "QuirksModeIssueDetails"
             },
             {
+              "name": "partitioningBlobURLIssueDetails",
+              "optional": true,
+              "$ref": "PartitioningBlobURLIssueDetails"
+            },
+            {
               "name": "navigatorUserAgentIssueDetails",
               "deprecated": true,
               "optional": true,
@@ -2124,6 +2197,11 @@
               "name": "selectElementAccessibilityIssueDetails",
               "optional": true,
               "$ref": "SelectElementAccessibilityIssueDetails"
+            },
+            {
+              "name": "sriMessageSignatureIssueDetails",
+              "optional": true,
+              "$ref": "SRIMessageSignatureIssueDetails"
             }
           ]
         },
@@ -4581,6 +4659,119 @@
           ]
         },
         {
+          "id": "CSSFunctionParameter",
+          "description": "CSS function argument representation.",
+          "type": "object",
+          "properties": [
+            {
+              "name": "name",
+              "description": "The parameter name.",
+              "type": "string"
+            },
+            {
+              "name": "type",
+              "description": "The parameter type.",
+              "type": "string"
+            }
+          ]
+        },
+        {
+          "id": "CSSFunctionConditionNode",
+          "description": "CSS function conditional block representation.",
+          "type": "object",
+          "properties": [
+            {
+              "name": "media",
+              "description": "Media query for this conditional block. Only one type of condition should be set.",
+              "optional": true,
+              "$ref": "CSSMedia"
+            },
+            {
+              "name": "containerQueries",
+              "description": "Container query for this conditional block. Only one type of condition should be set.",
+              "optional": true,
+              "$ref": "CSSContainerQuery"
+            },
+            {
+              "name": "supports",
+              "description": "@supports CSS at-rule condition. Only one type of condition should be set.",
+              "optional": true,
+              "$ref": "CSSSupports"
+            },
+            {
+              "name": "children",
+              "description": "Block body.",
+              "type": "array",
+              "items": {
+                "$ref": "CSSFunctionNode"
+              }
+            },
+            {
+              "name": "conditionText",
+              "description": "The condition text.",
+              "type": "string"
+            }
+          ]
+        },
+        {
+          "id": "CSSFunctionNode",
+          "description": "Section of the body of a CSS function rule.",
+          "type": "object",
+          "properties": [
+            {
+              "name": "condition",
+              "description": "A conditional block. If set, style should not be set.",
+              "optional": true,
+              "$ref": "CSSFunctionConditionNode"
+            },
+            {
+              "name": "style",
+              "description": "Values set by this node. If set, condition should not be set.",
+              "optional": true,
+              "$ref": "CSSStyle"
+            }
+          ]
+        },
+        {
+          "id": "CSSFunctionRule",
+          "description": "CSS function at-rule representation.",
+          "type": "object",
+          "properties": [
+            {
+              "name": "name",
+              "description": "Name of the function.",
+              "$ref": "Value"
+            },
+            {
+              "name": "styleSheetId",
+              "description": "The css style sheet identifier (absent for user agent stylesheet and user-specified\nstylesheet rules) this rule came from.",
+              "optional": true,
+              "$ref": "StyleSheetId"
+            },
+            {
+              "name": "origin",
+              "description": "Parent stylesheet's origin.",
+              "$ref": "StyleSheetOrigin"
+            },
+            {
+              "name": "parameters",
+              "description": "List of parameters.",
+              "type": "array",
+              "items": {
+                "$ref": "CSSFunctionParameter"
+              }
+            },
+            {
+              "name": "children",
+              "description": "Function body.",
+              "type": "array",
+              "items": {
+                "$ref": "CSSFunctionNode"
+              }
+            }
+          ]
+        },
+        {
           "id": "CSSKeyframeRule",
           "description": "CSS keyframe rule representation.",
           "type": "object",
@@ -5051,6 +5242,16 @@
               "experimental": true,
               "optional": true,
               "$ref": "DOM.NodeId"
+            },
+            {
+              "name": "cssFunctionRules",
+              "description": "A list of CSS at-function rules referenced by styles of this node.",
+              "experimental": true,
+              "optional": true,
+              "type": "array",
+              "items": {
+                "$ref": "CSSFunctionRule"
+              }
             }
           ]
         },
@@ -7127,7 +7328,8 @@
               "description": "Type of relation to get.",
               "type": "string",
               "enum": [
-                "PopoverTarget"
+                "PopoverTarget",
+                "InterestTarget"
               ]
             }
           ],
@@ -13092,7 +13294,8 @@
             "PreflightMissingPrivateNetworkAccessId",
             "PreflightMissingPrivateNetworkAccessName",
             "PrivateNetworkAccessPermissionUnavailable",
-            "PrivateNetworkAccessPermissionDenied"
+            "PrivateNetworkAccessPermissionDenied",
+            "LocalNetworkAccessPermissionDenied"
           ]
         },
         {
@@ -14176,7 +14379,8 @@
             "BlockFromInsecureToMorePrivate",
             "WarnFromInsecureToMorePrivate",
             "PreflightBlock",
-            "PreflightWarn"
+            "PreflightWarn",
+            "PermissionBlock"
           ]
         },
         {
@@ -17372,7 +17576,7 @@
         },
         {
           "id": "PermissionsPolicyFeature",
-          "description": "All Permissions Policy features. This enum should match the one defined\nin third_party/blink/renderer/core/permissions_policy/permissions_policy_features.json5.",
+          "description": "All Permissions Policy features. This enum should match the one defined\nin services/network/public/cpp/permissions_policy/permissions_policy_features.json5.",
           "experimental": true,
           "type": "string",
           "enum": [
@@ -17636,6 +17840,19 @@
           ]
         },
         {
+          "id": "SecurityOriginDetails",
+          "description": "Additional information about the frame document's security origin.",
+          "experimental": true,
+          "type": "object",
+          "properties": [
+            {
+              "name": "isLocalhost",
+              "description": "Indicates whether the frame document's security origin is one\nof the local hostnames (e.g. \"localhost\") or IP addresses (IPv4\n127.0.0.0/8 or IPv6 ::1).",
+              "type": "boolean"
+            }
+          ]
+        },
+        {
           "id": "Frame",
           "description": "Information about the Frame on the page.",
           "type": "object",
@@ -17686,6 +17903,13 @@
               "type": "string"
             },
             {
+              "name": "securityOriginDetails",
+              "description": "Additional details about the frame document's security origin.",
+              "experimental": true,
+              "optional": true,
+              "$ref": "SecurityOriginDetails"
+            },
+            {
               "name": "mimeType",
               "description": "Frame document's mimeType as determined by the browser.",
               "type": "string"
@@ -18808,7 +19032,8 @@
             "EmbedderExtensionMessagingForOpenPort",
             "EmbedderExtensionSentMessageToCachedFrame",
             "RequestedByWebViewClient",
-            "PostMessageByWebViewClient"
+            "PostMessageByWebViewClient",
+            "CacheControlNoStoreDeviceBoundSessionTerminated"
           ]
         },
         {
@@ -19128,7 +19353,16 @@
         },
         {
           "name": "enable",
-          "description": "Enables page domain notifications."
+          "description": "Enables page domain notifications.",
+          "parameters": [
+            {
+              "name": "enableFileChooserOpenedEvent",
+              "description": "If true, the `Page.fileChooserOpened` event will be emitted regardless of the state set by\n`Page.setInterceptFileChooserDialog` command (default: false).",
+              "experimental": true,
+              "optional": true,
+              "type": "boolean"
+            }
+          ]
         },
         {
           "name": "getAppManifest",
@@ -23947,6 +24181,12 @@
               "description": "Binding name, 'cdp' if not specified.",
               "optional": true,
               "type": "string"
+            },
+            {
+              "name": "inheritPermissions",
+              "description": "If true, inherits the current root session's permissions (default: false).",
+              "optional": true,
+              "type": "boolean"
             }
           ]
         },
@@ -26646,7 +26886,8 @@
             "SlowNetwork",
             "OtherPrerenderedPageActivated",
             "V8OptimizerDisabled",
-            "PrerenderFailedDuringPrefetch"
+            "PrerenderFailedDuringPrefetch",
+            "BrowsingDataRemoved"
           ]
         },
         {
