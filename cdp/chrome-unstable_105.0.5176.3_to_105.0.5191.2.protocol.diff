--- ./cdp/chrome-unstable_105.0.5176.3.protocol.json	2023-01-06 17:27:17.177152661 +0000
+++ ./cdp/chrome-unstable_105.0.5191.2.protocol.json	2023-01-06 17:27:41.337328298 +0000
@@ -1560,6 +1560,7 @@
             "DeprecationExample",
             "DocumentDomainSettingWithoutOriginAgentClusterHeader",
             "EventPath",
+            "ExpectCTHeader",
             "GeolocationInsecureOrigin",
             "GeolocationInsecureOriginDeprecatedNotRemoved",
             "GetUserMediaInsecureOrigin",
@@ -10674,6 +10675,7 @@
             "TextTrack",
             "XHR",
             "Fetch",
+            "Prefetch",
             "EventSource",
             "WebSocket",
             "Manifest",
@@ -11130,6 +11132,17 @@
               "name": "certificateTransparencyCompliance",
               "description": "Whether the request complied with Certificate Transparency policy",
               "$ref": "CertificateTransparencyCompliance"
+            },
+            {
+              "name": "serverSignatureAlgorithm",
+              "description": "The signature algorithm used by the server in the TLS server signature,\nrepresented as a TLS SignatureScheme code point. Omitted if not\napplicable or not known.",
+              "optional": true,
+              "type": "integer"
+            },
+            {
+              "name": "encryptedClientHello",
+              "description": "Whether the connection used Encrypted ClientHello",
+              "type": "boolean"
             }
           ]
         },
@@ -15194,6 +15207,7 @@
             "screen-wake-lock",
             "serial",
             "shared-autofill",
+            "shared-storage",
             "storage-access-api",
             "sync-xhr",
             "trust-token-redemption",
@@ -22340,6 +22354,29 @@
           ]
         },
         {
+          "id": "WasmDisassemblyChunk",
+          "experimental": true,
+          "type": "object",
+          "properties": [
+            {
+              "name": "lines",
+              "description": "The next chunk of disassembled lines.",
+              "type": "array",
+              "items": {
+                "type": "string"
+              }
+            },
+            {
+              "name": "bytecodeOffsets",
+              "description": "The bytecode offsets describing the start of each line.",
+              "type": "array",
+              "items": {
+                "type": "integer"
+              }
+            }
+          ]
+        },
+        {
           "id": "ScriptLanguage",
           "description": "Enum of possible script languages.",
           "type": "string",
@@ -22549,6 +22586,61 @@
             }
           ]
         },
+        {
+          "name": "disassembleWasmModule",
+          "experimental": true,
+          "parameters": [
+            {
+              "name": "scriptId",
+              "description": "Id of the script to disassemble",
+              "$ref": "Runtime.ScriptId"
+            }
+          ],
+          "returns": [
+            {
+              "name": "streamId",
+              "description": "For large modules, return a stream from which additional chunks of\ndisassembly can be read successively.",
+              "optional": true,
+              "type": "string"
+            },
+            {
+              "name": "totalNumberOfLines",
+              "description": "The total number of lines in the disassembly text.",
+              "type": "integer"
+            },
+            {
+              "name": "functionBodyOffsets",
+              "description": "The offsets of all function bodies plus one additional entry pointing\none by past the end of the last function.",
+              "type": "array",
+              "items": {
+                "type": "integer"
+              }
+            },
+            {
+              "name": "chunk",
+              "description": "The first chunk of disassembly.",
+              "$ref": "WasmDisassemblyChunk"
+            }
+          ]
+        },
+        {
+          "name": "nextWasmDisassemblyChunk",
+          "description": "Disassemble the next chunk of lines for the module corresponding to the\nstream. If disassembly is complete, this API will invalidate the streamId\nand return an empty chunk. Any subsequent calls for the now invalid stream\nwill return errors.",
+          "experimental": true,
+          "parameters": [
+            {
+              "name": "streamId",
+              "type": "string"
+            }
+          ],
+          "returns": [
+            {
+              "name": "chunk",
+              "description": "The next chunk of disassembly.",
+              "$ref": "WasmDisassemblyChunk"
+            }
+          ]
+        },
         {
           "name": "getWasmBytecode",
           "description": "This command is deprecated. Use getScriptSource instead.",
