--- ./cdp/chrome-unstable_109.0.5384.0.protocol.json	2023-01-06 17:34:32.772089444 +0000
+++ ./cdp/chrome-unstable_109.0.5396.2.protocol.json	2023-01-06 17:34:57.248244149 +0000
@@ -15280,6 +15280,7 @@
             "ch-width",
             "clipboard-read",
             "clipboard-write",
+            "compute-pressure",
             "cross-origin-isolated",
             "direct-sockets",
             "display-capture",
@@ -16202,7 +16203,6 @@
             "DedicatedWorkerOrWorklet",
             "OutstandingNetworkRequestOthers",
             "OutstandingIndexedDBTransaction",
-            "RequestedNotificationsPermission",
             "RequestedMIDIPermission",
             "RequestedAudioCapturePermission",
             "RequestedVideoCapturePermission",
@@ -19223,6 +19223,29 @@
           ]
         },
         {
+          "id": "SharedStorageAccessType",
+          "description": "Enum of shared storage access types.",
+          "type": "string",
+          "enum": [
+            "documentAddModule",
+            "documentSelectURL",
+            "documentRun",
+            "documentSet",
+            "documentAppend",
+            "documentDelete",
+            "documentClear",
+            "workletSet",
+            "workletAppend",
+            "workletDelete",
+            "workletClear",
+            "workletGet",
+            "workletKeys",
+            "workletEntries",
+            "workletLength",
+            "workletRemainingBudget"
+          ]
+        },
+        {
           "id": "SharedStorageEntry",
           "description": "Struct for a single key-value pair in an origin's shared storage.",
           "type": "object",
@@ -19255,6 +19278,93 @@
               "type": "number"
             }
           ]
+        },
+        {
+          "id": "SharedStorageReportingMetadata",
+          "description": "Pair of reporting metadata details for a candidate URL for `selectURL()`.",
+          "type": "object",
+          "properties": [
+            {
+              "name": "eventType",
+              "type": "string"
+            },
+            {
+              "name": "reportingUrl",
+              "type": "string"
+            }
+          ]
+        },
+        {
+          "id": "SharedStorageUrlWithMetadata",
+          "description": "Bundles a candidate URL with its reporting metadata.",
+          "type": "object",
+          "properties": [
+            {
+              "name": "url",
+              "description": "Spec of candidate URL.",
+              "type": "string"
+            },
+            {
+              "name": "reportingMetadata",
+              "description": "Any associated reporting metadata.",
+              "type": "array",
+              "items": {
+                "$ref": "SharedStorageReportingMetadata"
+              }
+            }
+          ]
+        },
+        {
+          "id": "SharedStorageAccessParams",
+          "description": "Bundles the parameters for shared storage access events whose\npresence/absence can vary according to SharedStorageAccessType.",
+          "type": "object",
+          "properties": [
+            {
+              "name": "scriptSourceUrl",
+              "description": "Spec of the module script URL.\nPresent only for SharedStorageAccessType.documentAddModule.",
+              "optional": true,
+              "type": "string"
+            },
+            {
+              "name": "operationName",
+              "description": "Name of the registered operation to be run.\nPresent only for SharedStorageAccessType.documentRun and\nSharedStorageAccessType.documentSelectURL.",
+              "optional": true,
+              "type": "string"
+            },
+            {
+              "name": "serializedData",
+              "description": "The operation's serialized data in bytes (converted to a string).\nPresent only for SharedStorageAccessType.documentRun and\nSharedStorageAccessType.documentSelectURL.",
+              "optional": true,
+              "type": "string"
+            },
+            {
+              "name": "urlsWithMetadata",
+              "description": "Array of candidate URLs' specs, along with any associated metadata.\nPresent only for SharedStorageAccessType.documentSelectURL.",
+              "optional": true,
+              "type": "array",
+              "items": {
+                "$ref": "SharedStorageUrlWithMetadata"
+              }
+            },
+            {
+              "name": "key",
+              "description": "Key for a specific entry in an origin's shared storage.\nPresent only for SharedStorageAccessType.documentSet,\nSharedStorageAccessType.documentAppend,\nSharedStorageAccessType.documentDelete,\nSharedStorageAccessType.workletSet,\nSharedStorageAccessType.workletAppend,\nSharedStorageAccessType.workletDelete, and\nSharedStorageAccessType.workletGet.",
+              "optional": true,
+              "type": "string"
+            },
+            {
+              "name": "value",
+              "description": "Value for a specific entry in an origin's shared storage.\nPresent only for SharedStorageAccessType.documentSet,\nSharedStorageAccessType.documentAppend,\nSharedStorageAccessType.workletSet, and\nSharedStorageAccessType.workletAppend.",
+              "optional": true,
+              "type": "string"
+            },
+            {
+              "name": "ignoreIfPresent",
+              "description": "Whether or not to set an entry for a key if that key is already present.\nPresent only for SharedStorageAccessType.documentSet and\nSharedStorageAccessType.workletSet.",
+              "optional": true,
+              "type": "boolean"
+            }
+          ]
         }
       ],
       "commands": [
@@ -19580,6 +19690,17 @@
               }
             }
           ]
+        },
+        {
+          "name": "setSharedStorageTracking",
+          "description": "Enables/disables issuing of sharedStorageAccessed events.",
+          "experimental": true,
+          "parameters": [
+            {
+              "name": "enable",
+              "type": "boolean"
+            }
+          ]
         }
       ],
       "events": [
@@ -19673,6 +19794,37 @@
               "type": "string"
             }
           ]
+        },
+        {
+          "name": "sharedStorageAccessed",
+          "description": "Shared storage was accessed by the associated page.\nThe following parameters are included in all events.",
+          "parameters": [
+            {
+              "name": "accessTime",
+              "description": "Time of the access.",
+              "$ref": "Network.TimeSinceEpoch"
+            },
+            {
+              "name": "type",
+              "description": "Enum value indicating the Shared Storage API method invoked.",
+              "$ref": "SharedStorageAccessType"
+            },
+            {
+              "name": "mainFrameId",
+              "description": "DevTools Frame Token for the primary frame tree's root.",
+              "$ref": "Page.FrameId"
+            },
+            {
+              "name": "ownerOrigin",
+              "description": "Serialized origin for the context that invoked the Shared Storage API.",
+              "type": "string"
+            },
+            {
+              "name": "params",
+              "description": "The sub-parameters warapped by `params` are all optional and their\npresence/absence depends on `type`.",
+              "$ref": "SharedStorageAccessParams"
+            }
+          ]
         }
       ]
     },
@@ -22030,6 +22182,34 @@
             }
           ]
         },
+        {
+          "name": "setResponseOverrideBits",
+          "description": "Resets parameters isBogusSignature, isBadUV, isBadUP to false if they are not present.",
+          "parameters": [
+            {
+              "name": "authenticatorId",
+              "$ref": "AuthenticatorId"
+            },
+            {
+              "name": "isBogusSignature",
+              "description": "If isBogusSignature is set, overrides the signature in the authenticator response to be zero.\nDefaults to false.",
+              "optional": true,
+              "type": "boolean"
+            },
+            {
+              "name": "isBadUV",
+              "description": "If isBadUV is set, overrides the UV bit in the flags in the authenticator response to\nbe zero. Defaults to false.",
+              "optional": true,
+              "type": "boolean"
+            },
+            {
+              "name": "isBadUP",
+              "description": "If isBadUP is set, overrides the UP bit in the flags in the authenticator response to\nbe zero. Defaults to false.",
+              "optional": true,
+              "type": "boolean"
+            }
+          ]
+        },
         {
           "name": "removeVirtualAuthenticator",
           "description": "Removes the given authenticator.",
