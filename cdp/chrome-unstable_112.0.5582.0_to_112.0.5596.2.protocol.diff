--- ./cdp/chrome-unstable_112.0.5582.0.protocol.json	2023-02-18 01:07:06.041464606 +0000
+++ ./cdp/chrome-unstable_112.0.5596.2.protocol.json	2023-02-18 01:07:35.953350065 +0000
@@ -378,7 +378,7 @@
             },
             {
               "name": "fetchRelatives",
-              "description": "Whether to fetch this nodes ancestors, siblings and children. Defaults to true.",
+              "description": "Whether to fetch this node's ancestors, siblings and children. Defaults to true.",
               "optional": true,
               "type": "boolean"
             }
@@ -1569,69 +1569,6 @@
           ]
         },
         {
-          "id": "DeprecationIssueType",
-          "type": "string",
-          "enum": [
-            "AuthorizationCoveredByWildcard",
-            "CanRequestURLHTTPContainingNewline",
-            "ChromeLoadTimesConnectionInfo",
-            "ChromeLoadTimesFirstPaintAfterLoadTime",
-            "ChromeLoadTimesWasAlternateProtocolAvailable",
-            "CookieWithTruncatingChar",
-            "CrossOriginAccessBasedOnDocumentDomain",
-            "CrossOriginWindowAlert",
-            "CrossOriginWindowConfirm",
-            "CSSSelectorInternalMediaControlsOverlayCastButton",
-            "DeprecationExample",
-            "DocumentDomainSettingWithoutOriginAgentClusterHeader",
-            "EventPath",
-            "ExpectCTHeader",
-            "GeolocationInsecureOrigin",
-            "GeolocationInsecureOriginDeprecatedNotRemoved",
-            "GetUserMediaInsecureOrigin",
-            "HostCandidateAttributeGetter",
-            "IdentityInCanMakePaymentEvent",
-            "InsecurePrivateNetworkSubresourceRequest",
-            "LocalCSSFileExtensionRejected",
-            "MediaSourceAbortRemove",
-            "MediaSourceDurationTruncatingBuffered",
-            "NoSysexWebMIDIWithoutPermission",
-            "NotificationInsecureOrigin",
-            "NotificationPermissionRequestedIframe",
-            "ObsoleteCreateImageBitmapImageOrientationNone",
-            "ObsoleteWebRtcCipherSuite",
-            "OpenWebDatabaseInsecureContext",
-            "OverflowVisibleOnReplacedElement",
-            "PaymentInstruments",
-            "PaymentRequestCSPViolation",
-            "PersistentQuotaType",
-            "PictureSourceSrc",
-            "PrefixedCancelAnimationFrame",
-            "PrefixedRequestAnimationFrame",
-            "PrefixedStorageInfo",
-            "PrefixedVideoDisplayingFullscreen",
-            "PrefixedVideoEnterFullscreen",
-            "PrefixedVideoEnterFullScreen",
-            "PrefixedVideoExitFullscreen",
-            "PrefixedVideoExitFullScreen",
-            "PrefixedVideoSupportsFullscreen",
-            "PrivacySandboxExtensionsAPI",
-            "RangeExpand",
-            "RequestedSubresourceWithEmbeddedCredentials",
-            "RTCConstraintEnableDtlsSrtpFalse",
-            "RTCConstraintEnableDtlsSrtpTrue",
-            "RTCPeerConnectionComplexPlanBSdpUsingDefaultSdpSemantics",
-            "RTCPeerConnectionSdpSemanticsPlanB",
-            "RtcpMuxPolicyNegotiate",
-            "SharedArrayBufferConstructedWithoutIsolation",
-            "TextToSpeech_DisallowedByAutoplay",
-            "V8SharedArrayBufferConstructedInExtensionWithoutIsolation",
-            "XHRJSONEncodingDetection",
-            "XMLHttpRequestSynchronousInNonWorkerOutsideBeforeUnload",
-            "XRSupportsSession"
-          ]
-        },
-        {
           "id": "DeprecationIssueDetails",
           "description": "This issue tracks information needed to print a deprecation message.\nhttps://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/core/frame/third_party/blink/renderer/core/frame/deprecation/README.md",
           "type": "object",
@@ -1647,7 +1584,8 @@
             },
             {
               "name": "type",
-              "$ref": "DeprecationIssueType"
+              "description": "One of the deprecation names from third_party/blink/renderer/core/frame/deprecation/deprecation.json5",
+              "type": "string"
             }
           ]
         },
@@ -3984,7 +3922,7 @@
           "returns": [
             {
               "name": "nodeIds",
-              "description": "The list of node Ids that have their tracked computed styles updated",
+              "description": "The list of node Ids that have their tracked computed styles updated.",
               "type": "array",
               "items": {
                 "$ref": "DOM.NodeId"
@@ -4215,7 +4153,7 @@
         },
         {
           "name": "stopRuleUsageTracking",
-          "description": "Stop tracking rule usage and return the list of rules that were used since last call to\n`takeCoverageDelta` (or since start of coverage instrumentation)",
+          "description": "Stop tracking rule usage and return the list of rules that were used since last call to\n`takeCoverageDelta` (or since start of coverage instrumentation).",
           "returns": [
             {
               "name": "ruleUsage",
@@ -4228,7 +4166,7 @@
         },
         {
           "name": "takeCoverageDelta",
-          "description": "Obtain list of rules that became used since last call to this method (or since start of coverage\ninstrumentation)",
+          "description": "Obtain list of rules that became used since last call to this method (or since start of coverage\ninstrumentation).",
           "returns": [
             {
               "name": "coverage",
@@ -4260,7 +4198,7 @@
       "events": [
         {
           "name": "fontsUpdated",
-          "description": "Fires whenever a web font is updated.  A non-empty font parameter indicates a successfully loaded\nweb font",
+          "description": "Fires whenever a web font is updated.  A non-empty font parameter indicates a successfully loaded\nweb font.",
           "parameters": [
             {
               "name": "font",
@@ -5414,7 +5352,7 @@
         },
         {
           "name": "getDocument",
-          "description": "Returns the root DOM node (and optionally the subtree) to the caller.",
+          "description": "Returns the root DOM node (and optionally the subtree) to the caller.\nImplicitly enables the DOM domain events for the current target.",
           "parameters": [
             {
               "name": "depth",
@@ -8318,12 +8256,13 @@
           "parameters": [
             {
               "name": "type",
-              "description": "Vision deficiency to emulate.",
+              "description": "Vision deficiency to emulate. Order: best-effort emulations come first, followed by any\nphysiologically accurate emulations for medically recognized color vision deficiencies.",
               "type": "string",
               "enum": [
                 "none",
-                "achromatopsia",
                 "blurredVision",
+                "reducedContrast",
+                "achromatopsia",
                 "deuteranopia",
                 "protanopia",
                 "tritanopia"
@@ -9139,7 +9078,7 @@
         },
         {
           "name": "getMetadata",
-          "description": "Gets metadata of an object store",
+          "description": "Gets metadata of an object store.",
           "parameters": [
             {
               "name": "securityOrigin",
@@ -16497,6 +16436,18 @@
             "ActivatedDuringMainFrameNavigation",
             "PreloadingUnsupportedByWebContents"
           ]
+        },
+        {
+          "id": "PrefetchStatus",
+          "description": "List of Prefetch status, which refers to PreloadingTriggeringOutcome.",
+          "type": "string",
+          "enum": [
+            "Running",
+            "Ready",
+            "Success",
+            "Failure",
+            "NotSupported"
+          ]
         }
       ],
       "commands": [
@@ -18098,6 +18049,26 @@
           ]
         },
         {
+          "name": "prefetchStatusUpdated",
+          "description": "TODO(crbug/1384419): Create a dedicated domain for preloading.\nFired when a prefetch attempt is updated.",
+          "experimental": true,
+          "parameters": [
+            {
+              "name": "initiatingFrameId",
+              "description": "The frame id of the frame initiating prefetch.",
+              "$ref": "FrameId"
+            },
+            {
+              "name": "prefetchUrl",
+              "type": "string"
+            },
+            {
+              "name": "status",
+              "$ref": "PrefetchStatus"
+            }
+          ]
+        },
+        {
           "name": "loadEventFired",
           "parameters": [
             {
@@ -19759,6 +19730,24 @@
           ]
         },
         {
+          "name": "clearTrustTokens",
+          "description": "Removes all Trust Tokens issued by the provided issuerOrigin.\nLeaves other stored data, including the issuer's Redemption Records, intact.",
+          "experimental": true,
+          "parameters": [
+            {
+              "name": "issuerOrigin",
+              "type": "string"
+            }
+          ],
+          "returns": [
+            {
+              "name": "didDeleteTokens",
+              "description": "True if any tokens were deleted, false otherwise.",
+              "type": "boolean"
+            }
+          ]
+        },
+        {
           "name": "getInterestGroupDetails",
           "description": "Gets details for a named interest group.",
           "experimental": true,
@@ -22808,6 +22797,152 @@
       ]
     },
     {
+      "domain": "DeviceAccess",
+      "experimental": true,
+      "types": [
+        {
+          "id": "RequestId",
+          "description": "Device request id.",
+          "type": "string"
+        },
+        {
+          "id": "DeviceId",
+          "description": "A device id.",
+          "type": "string"
+        },
+        {
+          "id": "PromptDevice",
+          "description": "Device information displayed in a user prompt to select a device.",
+          "type": "object",
+          "properties": [
+            {
+              "name": "id",
+              "$ref": "DeviceId"
+            },
+            {
+              "name": "name",
+              "description": "Display name as it appears in a device request user prompt.",
+              "type": "string"
+            }
+          ]
+        }
+      ],
+      "commands": [
+        {
+          "name": "enable",
+          "description": "Enable events in this domain."
+        },
+        {
+          "name": "disable",
+          "description": "Disable events in this domain."
+        },
+        {
+          "name": "selectPrompt",
+          "description": "Select a device in response to a DeviceAccess.deviceRequestPrompted event.",
+          "parameters": [
+            {
+              "name": "id",
+              "$ref": "RequestId"
+            },
+            {
+              "name": "deviceId",
+              "$ref": "DeviceId"
+            }
+          ]
+        },
+        {
+          "name": "cancelPrompt",
+          "description": "Cancel a prompt in response to a DeviceAccess.deviceRequestPrompted event.",
+          "parameters": [
+            {
+              "name": "id",
+              "$ref": "RequestId"
+            }
+          ]
+        }
+      ],
+      "events": [
+        {
+          "name": "deviceRequestPrompted",
+          "description": "A device request opened a user prompt to select a device. Respond with the\nselectPrompt or cancelPrompt command.",
+          "parameters": [
+            {
+              "name": "id",
+              "$ref": "RequestId"
+            },
+            {
+              "name": "devices",
+              "type": "array",
+              "items": {
+                "$ref": "PromptDevice"
+              }
+            }
+          ]
+        }
+      ]
+    },
+    {
+      "domain": "Preload",
+      "experimental": true,
+      "types": [
+        {
+          "id": "RuleSetId",
+          "description": "Unique id",
+          "type": "string"
+        },
+        {
+          "id": "RuleSet",
+          "description": "Corresponds to SpeculationRuleSet",
+          "type": "object",
+          "properties": [
+            {
+              "name": "id",
+              "$ref": "RuleSetId"
+            },
+            {
+              "name": "loaderId",
+              "description": "Identifies a document which the rule set is associated with.",
+              "$ref": "Network.LoaderId"
+            },
+            {
+              "name": "sourceText",
+              "description": "Source text of JSON representing the rule set. If it comes from\n<script> tag, it is the textContent of the node. Note that it is\na JSON for valid case.\n\nSee also:\n- https://wicg.github.io/nav-speculation/speculation-rules.html\n- https://github.com/WICG/nav-speculation/blob/main/triggers.md",
+              "type": "string"
+            }
+          ]
+        }
+      ],
+      "commands": [
+        {
+          "name": "enable"
+        },
+        {
+          "name": "disable"
+        }
+      ],
+      "events": [
+        {
+          "name": "ruleSetUpdated",
+          "description": "Upsert. Currently, it is only emitted when a rule set added.",
+          "parameters": [
+            {
+              "name": "ruleSet",
+              "$ref": "RuleSet"
+            }
+          ]
+        },
+        {
+          "name": "ruleSetRemoved",
+          "parameters": [
+            {
+              "name": "id",
+              "$ref": "RuleSetId"
+            }
+          ]
+        }
+      ]
+    },
+    {
       "domain": "Console",
       "description": "This domain is deprecated - use Runtime or Log instead.",
       "deprecated": true,
@@ -23867,7 +24002,8 @@
                 "Ok",
                 "CompileError",
                 "BlockedByActiveGenerator",
-                "BlockedByActiveFunction"
+                "BlockedByActiveFunction",
+                "BlockedByTopLevelEsModuleChange"
               ]
             },
             {
