{
  "browser": "chrome-unstable",
  "version": "121.0.6129.0",
  "protocolHash": "a5b1b3ed",
  "commandsCount": 577,
  "commandsHash": "51332d64",
  "eventsCount": 186,
  "eventsHash": "2008219f",
  "commands": [
    "Accessibility.disable",
    "Accessibility.enable",
    "Accessibility.getPartialAXTree(nodeId,backendNodeId,objectId,fetchRelatives)",
    "Accessibility.getFullAXTree(depth,frameId)",
    "Accessibility.getRootAXNode(frameId)",
    "Accessibility.getAXNodeAndAncestors(nodeId,backendNodeId,objectId)",
    "Accessibility.getChildAXNodes(id,frameId)",
    "Accessibility.queryAXTree(nodeId,backendNodeId,objectId,accessibleName,role)",
    "Animation.disable",
    "Animation.enable",
    "Animation.getCurrentTime(id)",
    "Animation.getPlaybackRate",
    "Animation.releaseAnimations(animations)",
    "Animation.resolveAnimation(animationId)",
    "Animation.seekAnimations(animations,currentTime)",
    "Animation.setPaused(animations,paused)",
    "Animation.setPlaybackRate(playbackRate)",
    "Animation.setTiming(animationId,duration,delay)",
    "Audits.getEncodedResponse(requestId,encoding,quality,sizeOnly)",
    "Audits.disable",
    "Audits.enable",
    "Audits.checkContrast(reportAAA)",
    "Audits.checkFormsIssues",
    "Autofill.trigger(fieldId,frameId,card)",
    "Autofill.setAddresses(addresses)",
    "Autofill.disable",
    "Autofill.enable",
    "BackgroundService.startObserving(service)",
    "BackgroundService.stopObserving(service)",
    "BackgroundService.setRecording(shouldRecord,service)",
    "BackgroundService.clearEvents(service)",
    "Browser.setPermission(permission,setting,origin,browserContextId)",
    "Browser.grantPermissions(permissions,origin,browserContextId)",
    "Browser.resetPermissions(browserContextId)",
    "Browser.setDownloadBehavior(behavior,browserContextId,downloadPath,eventsEnabled)",
    "Browser.cancelDownload(guid,browserContextId)",
    "Browser.close",
    "Browser.crash",
    "Browser.crashGpuProcess",
    "Browser.getVersion",
    "Browser.getBrowserCommandLine",
    "Browser.getHistograms(query,delta)",
    "Browser.getHistogram(name,delta)",
    "Browser.getWindowBounds(windowId)",
    "Browser.getWindowForTarget(targetId)",
    "Browser.setWindowBounds(windowId,bounds)",
    "Browser.setDockTile(badgeLabel,image)",
    "Browser.executeBrowserCommand(commandId)",
    "Browser.addPrivacySandboxEnrollmentOverride(url)",
    "CSS.addRule(styleSheetId,ruleText,location)",
    "CSS.collectClassNames(styleSheetId)",
    "CSS.createStyleSheet(frameId)",
    "CSS.disable",
    "CSS.enable",
    "CSS.forcePseudoState(nodeId,forcedPseudoClasses)",
    "CSS.getBackgroundColors(nodeId)",
    "CSS.getComputedStyleForNode(nodeId)",
    "CSS.getInlineStylesForNode(nodeId)",
    "CSS.getMatchedStylesForNode(nodeId)",
    "CSS.getMediaQueries",
    "CSS.getPlatformFontsForNode(nodeId)",
    "CSS.getStyleSheetText(styleSheetId)",
    "CSS.getLayersForNode(nodeId)",
    "CSS.trackComputedStyleUpdates(propertiesToTrack)",
    "CSS.takeComputedStyleUpdates",
    "CSS.setEffectivePropertyValueForNode(nodeId,propertyName,value)",
    "CSS.setPropertyRulePropertyName(styleSheetId,range,propertyName)",
    "CSS.setKeyframeKey(styleSheetId,range,keyText)",
    "CSS.setMediaText(styleSheetId,range,text)",
    "CSS.setContainerQueryText(styleSheetId,range,text)",
    "CSS.setSupportsText(styleSheetId,range,text)",
    "CSS.setScopeText(styleSheetId,range,text)",
    "CSS.setRuleSelector(styleSheetId,range,selector)",
    "CSS.setStyleSheetText(styleSheetId,text)",
    "CSS.setStyleTexts(edits)",
    "CSS.startRuleUsageTracking",
    "CSS.stopRuleUsageTracking",
    "CSS.takeCoverageDelta",
    "CSS.setLocalFontsEnabled(enabled)",
    "CacheStorage.deleteCache(cacheId)",
    "CacheStorage.deleteEntry(cacheId,request)",
    "CacheStorage.requestCacheNames(securityOrigin,storageKey,storageBucket)",
    "CacheStorage.requestCachedResponse(cacheId,requestURL,requestHeaders)",
    "CacheStorage.requestEntries(cacheId,skipCount,pageSize,pathFilter)",
    "Cast.enable(presentationUrl)",
    "Cast.disable",
    "Cast.setSinkToUse(sinkName)",
    "Cast.startDesktopMirroring(sinkName)",
    "Cast.startTabMirroring(sinkName)",
    "Cast.stopCasting(sinkName)",
    "DOM.collectClassNamesFromSubtree(nodeId)",
    "DOM.copyTo(nodeId,targetNodeId,insertBeforeNodeId)",
    "DOM.describeNode(nodeId,backendNodeId,objectId,depth,pierce)",
    "DOM.scrollIntoViewIfNeeded(nodeId,backendNodeId,objectId,rect)",
    "DOM.disable",
    "DOM.discardSearchResults(searchId)",
    "DOM.enable(includeWhitespace)",
    "DOM.focus(nodeId,backendNodeId,objectId)",
    "DOM.getAttributes(nodeId)",
    "DOM.getBoxModel(nodeId,backendNodeId,objectId)",
    "DOM.getContentQuads(nodeId,backendNodeId,objectId)",
    "DOM.getDocument(depth,pierce)",
    "DOM.getFlattenedDocument(depth,pierce)",
    "DOM.getNodesForSubtreeByStyle(nodeId,computedStyles,pierce)",
    "DOM.getNodeForLocation(x,y,includeUserAgentShadowDOM,ignorePointerEventsNone)",
    "DOM.getOuterHTML(nodeId,backendNodeId,objectId)",
    "DOM.getRelayoutBoundary(nodeId)",
    "DOM.getSearchResults(searchId,fromIndex,toIndex)",
    "DOM.hideHighlight",
    "DOM.highlightNode",
    "DOM.highlightRect",
    "DOM.markUndoableState",
    "DOM.moveTo(nodeId,targetNodeId,insertBeforeNodeId)",
    "DOM.performSearch(query,includeUserAgentShadowDOM)",
    "DOM.pushNodeByPathToFrontend(path)",
    "DOM.pushNodesByBackendIdsToFrontend(backendNodeIds)",
    "DOM.querySelector(nodeId,selector)",
    "DOM.querySelectorAll(nodeId,selector)",
    "DOM.getTopLayerElements",
    "DOM.redo",
    "DOM.removeAttribute(nodeId,name)",
    "DOM.removeNode(nodeId)",
    "DOM.requestChildNodes(nodeId,depth,pierce)",
    "DOM.requestNode(objectId)",
    "DOM.resolveNode(nodeId,backendNodeId,objectGroup,executionContextId)",
    "DOM.setAttributeValue(nodeId,name,value)",
    "DOM.setAttributesAsText(nodeId,text,name)",
    "DOM.setFileInputFiles(files,nodeId,backendNodeId,objectId)",
    "DOM.setNodeStackTracesEnabled(enable)",
    "DOM.getNodeStackTraces(nodeId)",
    "DOM.getFileInfo(objectId)",
    "DOM.setInspectedNode(nodeId)",
    "DOM.setNodeName(nodeId,name)",
    "DOM.setNodeValue(nodeId,value)",
    "DOM.setOuterHTML(nodeId,outerHTML)",
    "DOM.undo",
    "DOM.getFrameOwner(frameId)",
    "DOM.getContainerForNode(nodeId,containerName,physicalAxes,logicalAxes)",
    "DOM.getQueryingDescendantsForContainer(nodeId)",
    "DOMDebugger.getEventListeners(objectId,depth,pierce)",
    "DOMDebugger.removeDOMBreakpoint(nodeId,type)",
    "DOMDebugger.removeEventListenerBreakpoint(eventName,targetName)",
    "DOMDebugger.removeInstrumentationBreakpoint(eventName)",
    "DOMDebugger.removeXHRBreakpoint(url)",
    "DOMDebugger.setBreakOnCSPViolation(violationTypes)",
    "DOMDebugger.setDOMBreakpoint(nodeId,type)",
    "DOMDebugger.setEventListenerBreakpoint(eventName,targetName)",
    "DOMDebugger.setInstrumentationBreakpoint(eventName)",
    "DOMDebugger.setXHRBreakpoint(url)",
    "EventBreakpoints.setInstrumentationBreakpoint(eventName)",
    "EventBreakpoints.removeInstrumentationBreakpoint(eventName)",
    "EventBreakpoints.disable",
    "DOMSnapshot.disable",
    "DOMSnapshot.enable",
    "DOMSnapshot.getSnapshot(computedStyleWhitelist,includeEventListeners,includePaintOrder,includeUserAgentShadowTree)",
    "DOMSnapshot.captureSnapshot(computedStyles,includePaintOrder,includeDOMRects,includeBlendedBackgroundColors,includeTextColorOpacities)",
    "DOMStorage.clear(storageId)",
    "DOMStorage.disable",
    "DOMStorage.enable",
    "DOMStorage.getDOMStorageItems(storageId)",
    "DOMStorage.removeDOMStorageItem(storageId,key)",
    "DOMStorage.setDOMStorageItem(storageId,key,value)",
    "Database.disable",
    "Database.enable",
    "Database.executeSQL(databaseId,query)",
    "Database.getDatabaseTableNames(databaseId)",
    "DeviceOrientation.clearDeviceOrientationOverride",
    "DeviceOrientation.setDeviceOrientationOverride(alpha,beta,gamma)",
    "Emulation.canEmulate",
    "Emulation.clearDeviceMetricsOverride",
    "Emulation.clearGeolocationOverride",
    "Emulation.resetPageScaleFactor",
    "Emulation.setFocusEmulationEnabled(enabled)",
    "Emulation.setAutoDarkModeOverride(enabled)",
    "Emulation.setCPUThrottlingRate(rate)",
    "Emulation.setDefaultBackgroundColorOverride(color)",
    "Emulation.setDeviceMetricsOverride(width,height,deviceScaleFactor,mobile,scale,screenWidth,screenHeight,positionX,positionY,dontSetVisibleSize,screenOrientation,viewport,displayFeature)",
    "Emulation.setScrollbarsHidden(hidden)",
    "Emulation.setDocumentCookieDisabled(disabled)",
    "Emulation.setEmitTouchEventsForMouse(enabled,configuration)",
    "Emulation.setEmulatedMedia(media,features)",
    "Emulation.setEmulatedVisionDeficiency(type)",
    "Emulation.setGeolocationOverride(latitude,longitude,accuracy)",
    "Emulation.getOverriddenSensorInformation(type)",
    "Emulation.setSensorOverrideEnabled(enabled,type,metadata)",
    "Emulation.setSensorOverrideReadings(type,reading)",
    "Emulation.setIdleOverride(isUserActive,isScreenUnlocked)",
    "Emulation.clearIdleOverride",
    "Emulation.setNavigatorOverrides(platform)",
    "Emulation.setPageScaleFactor(pageScaleFactor)",
    "Emulation.setScriptExecutionDisabled(value)",
    "Emulation.setTouchEmulationEnabled(enabled,maxTouchPoints)",
    "Emulation.setVirtualTimePolicy(policy,budget,maxVirtualTimeTaskStarvationCount,initialVirtualTime)",
    "Emulation.setLocaleOverride(locale)",
    "Emulation.setTimezoneOverride(timezoneId)",
    "Emulation.setVisibleSize(width,height)",
    "Emulation.setDisabledImageTypes(imageTypes)",
    "Emulation.setHardwareConcurrencyOverride(hardwareConcurrency)",
    "Emulation.setUserAgentOverride(userAgent,acceptLanguage,platform,userAgentMetadata)",
    "Emulation.setAutomationOverride(enabled)",
    "HeadlessExperimental.beginFrame(frameTimeTicks,interval,noDisplayUpdates,screenshot)",
    "HeadlessExperimental.disable",
    "HeadlessExperimental.enable",
    "IO.close(handle)",
    "IO.read(handle,offset,size)",
    "IO.resolveBlob(objectId)",
    "IndexedDB.clearObjectStore(securityOrigin,storageKey,storageBucket,databaseName,objectStoreName)",
    "IndexedDB.deleteDatabase(securityOrigin,storageKey,storageBucket,databaseName)",
    "IndexedDB.deleteObjectStoreEntries(securityOrigin,storageKey,storageBucket,databaseName,objectStoreName,keyRange)",
    "IndexedDB.disable",
    "IndexedDB.enable",
    "IndexedDB.requestData(securityOrigin,storageKey,storageBucket,databaseName,objectStoreName,indexName,skipCount,pageSize,keyRange)",
    "IndexedDB.getMetadata(securityOrigin,storageKey,storageBucket,databaseName,objectStoreName)",
    "IndexedDB.requestDatabase(securityOrigin,storageKey,storageBucket,databaseName)",
    "IndexedDB.requestDatabaseNames(securityOrigin,storageKey,storageBucket)",
    "Input.dispatchDragEvent(type,x,y,data,modifiers)",
    "Input.dispatchKeyEvent(type,modifiers,timestamp,text,unmodifiedText,keyIdentifier,code,key,windowsVirtualKeyCode,nativeVirtualKeyCode,autoRepeat,isKeypad,isSystemKey,location,commands)",
    "Input.insertText(text)",
    "Input.imeSetComposition(text,selectionStart,selectionEnd,replacementStart,replacementEnd)",
    "Input.dispatchMouseEvent(type,x,y,modifiers,timestamp,button,buttons,clickCount,force,tangentialPressure,tiltX,tiltY,twist,deltaX,deltaY,pointerType)",
    "Input.dispatchTouchEvent(type,touchPoints,modifiers,timestamp)",
    "Input.cancelDragging",
    "Input.emulateTouchFromMouseEvent(type,x,y,button,timestamp,deltaX,deltaY,modifiers,clickCount)",
    "Input.setIgnoreInputEvents(ignore)",
    "Input.setInterceptDrags(enabled)",
    "Input.synthesizePinchGesture(x,y,scaleFactor,relativeSpeed,gestureSourceType)",
    "Input.synthesizeScrollGesture(x,y,xDistance,yDistance,xOverscroll,yOverscroll,preventFling,speed,gestureSourceType,repeatCount,repeatDelayMs,interactionMarkerName)",
    "Input.synthesizeTapGesture(x,y,duration,tapCount,gestureSourceType)",
    "Inspector.disable",
    "Inspector.enable",
    "LayerTree.compositingReasons(layerId)",
    "LayerTree.disable",
    "LayerTree.enable",
    "LayerTree.loadSnapshot(tiles)",
    "LayerTree.makeSnapshot(layerId)",
    "LayerTree.profileSnapshot(snapshotId,minRepeatCount,minDuration,clipRect)",
    "LayerTree.releaseSnapshot(snapshotId)",
    "LayerTree.replaySnapshot(snapshotId,fromStep,toStep,scale)",
    "LayerTree.snapshotCommandLog(snapshotId)",
    "Log.clear",
    "Log.disable",
    "Log.enable",
    "Log.startViolationsReport(config)",
    "Log.stopViolationsReport",
    "Memory.getDOMCounters",
    "Memory.prepareForLeakDetection",
    "Memory.forciblyPurgeJavaScriptMemory",
    "Memory.setPressureNotificationsSuppressed(suppressed)",
    "Memory.simulatePressureNotification(level)",
    "Memory.startSampling(samplingInterval,suppressRandomness)",
    "Memory.stopSampling",
    "Memory.getAllTimeSamplingProfile",
    "Memory.getBrowserSamplingProfile",
    "Memory.getSamplingProfile",
    "Network.setAcceptedEncodings(encodings)",
    "Network.clearAcceptedEncodingsOverride",
    "Network.canClearBrowserCache",
    "Network.canClearBrowserCookies",
    "Network.canEmulateNetworkConditions",
    "Network.clearBrowserCache",
    "Network.clearBrowserCookies",
    "Network.continueInterceptedRequest(interceptionId,errorReason,rawResponse,url,method,postData,headers,authChallengeResponse)",
    "Network.deleteCookies(name,url,domain,path)",
    "Network.disable",
    "Network.emulateNetworkConditions(offline,latency,downloadThroughput,uploadThroughput,connectionType)",
    "Network.enable(maxTotalBufferSize,maxResourceBufferSize,maxPostDataSize)",
    "Network.getAllCookies",
    "Network.getCertificate(origin)",
    "Network.getCookies(urls)",
    "Network.getResponseBody(requestId)",
    "Network.getRequestPostData(requestId)",
    "Network.getResponseBodyForInterception(interceptionId)",
    "Network.takeResponseBodyForInterceptionAsStream(interceptionId)",
    "Network.replayXHR(requestId)",
    "Network.searchInResponseBody(requestId,query,caseSensitive,isRegex)",
    "Network.setBlockedURLs(urls)",
    "Network.setBypassServiceWorker(bypass)",
    "Network.setCacheDisabled(cacheDisabled)",
    "Network.setCookie(name,value,url,domain,path,secure,httpOnly,sameSite,expires,priority,sameParty,sourceScheme,sourcePort,partitionKey)",
    "Network.setCookies(cookies)",
    "Network.setExtraHTTPHeaders(headers)",
    "Network.setAttachDebugStack(enabled)",
    "Network.setRequestInterception(patterns)",
    "Network.setUserAgentOverride(userAgent,acceptLanguage,platform,userAgentMetadata)",
    "Network.getSecurityIsolationStatus(frameId)",
    "Network.enableReportingApi(enable)",
    "Network.loadNetworkResource(frameId,url,options)",
    "Overlay.disable",
    "Overlay.enable",
    "Overlay.getHighlightObjectForTest(nodeId,includeDistance,includeStyle,colorFormat,showAccessibilityInfo)",
    "Overlay.getGridHighlightObjectsForTest(nodeIds)",
    "Overlay.getSourceOrderHighlightObjectForTest(nodeId)",
    "Overlay.hideHighlight",
    "Overlay.highlightFrame(frameId,contentColor,contentOutlineColor)",
    "Overlay.highlightNode(highlightConfig,nodeId,backendNodeId,objectId,selector)",
    "Overlay.highlightQuad(quad,color,outlineColor)",
    "Overlay.highlightRect(x,y,width,height,color,outlineColor)",
    "Overlay.highlightSourceOrder(sourceOrderConfig,nodeId,backendNodeId,objectId)",
    "Overlay.setInspectMode(mode,highlightConfig)",
    "Overlay.setShowAdHighlights(show)",
    "Overlay.setPausedInDebuggerMessage(message)",
    "Overlay.setShowDebugBorders(show)",
    "Overlay.setShowFPSCounter(show)",
    "Overlay.setShowGridOverlays(gridNodeHighlightConfigs)",
    "Overlay.setShowFlexOverlays(flexNodeHighlightConfigs)",
    "Overlay.setShowScrollSnapOverlays(scrollSnapHighlightConfigs)",
    "Overlay.setShowContainerQueryOverlays(containerQueryHighlightConfigs)",
    "Overlay.setShowPaintRects(result)",
    "Overlay.setShowLayoutShiftRegions(result)",
    "Overlay.setShowScrollBottleneckRects(show)",
    "Overlay.setShowHitTestBorders(show)",
    "Overlay.setShowWebVitals(show)",
    "Overlay.setShowViewportSizeOnResize(show)",
    "Overlay.setShowHinge(hingeConfig)",
    "Overlay.setShowIsolatedElements(isolatedElementHighlightConfigs)",
    "Overlay.setShowWindowControlsOverlay(windowControlsOverlayConfig)",
    "Page.addScriptToEvaluateOnLoad(scriptSource)",
    "Page.addScriptToEvaluateOnNewDocument(source,worldName,includeCommandLineAPI,runImmediately)",
    "Page.bringToFront",
    "Page.captureScreenshot(format,quality,clip,fromSurface,captureBeyondViewport,optimizeForSpeed)",
    "Page.captureSnapshot(format)",
    "Page.clearDeviceMetricsOverride",
    "Page.clearDeviceOrientationOverride",
    "Page.clearGeolocationOverride",
    "Page.createIsolatedWorld(frameId,worldName,grantUniveralAccess)",
    "Page.deleteCookie(cookieName,url)",
    "Page.disable",
    "Page.enable",
    "Page.getAppManifest",
    "Page.getInstallabilityErrors",
    "Page.getManifestIcons",
    "Page.getAppId",
    "Page.getAdScriptId(frameId)",
    "Page.getCookies",
    "Page.getFrameTree",
    "Page.getLayoutMetrics",
    "Page.getNavigationHistory",
    "Page.resetNavigationHistory",
    "Page.getResourceContent(frameId,url)",
    "Page.getResourceTree",
    "Page.handleJavaScriptDialog(accept,promptText)",
    "Page.navigate(url,referrer,transitionType,frameId,referrerPolicy)",
    "Page.navigateToHistoryEntry(entryId)",
    "Page.printToPDF(landscape,displayHeaderFooter,printBackground,scale,paperWidth,paperHeight,marginTop,marginBottom,marginLeft,marginRight,pageRanges,headerTemplate,footerTemplate,preferCSSPageSize,transferMode,generateTaggedPDF)",
    "Page.reload(ignoreCache,scriptToEvaluateOnLoad)",
    "Page.removeScriptToEvaluateOnLoad(identifier)",
    "Page.removeScriptToEvaluateOnNewDocument(identifier)",
    "Page.screencastFrameAck(sessionId)",
    "Page.searchInResource(frameId,url,query,caseSensitive,isRegex)",
    "Page.setAdBlockingEnabled(enabled)",
    "Page.setBypassCSP(enabled)",
    "Page.getPermissionsPolicyState(frameId)",
    "Page.getOriginTrials(frameId)",
    "Page.setDeviceMetricsOverride(width,height,deviceScaleFactor,mobile,scale,screenWidth,screenHeight,positionX,positionY,dontSetVisibleSize,screenOrientation,viewport)",
    "Page.setDeviceOrientationOverride(alpha,beta,gamma)",
    "Page.setFontFamilies(fontFamilies,forScripts)",
    "Page.setFontSizes(fontSizes)",
    "Page.setDocumentContent(frameId,html)",
    "Page.setDownloadBehavior(behavior,downloadPath)",
    "Page.setGeolocationOverride(latitude,longitude,accuracy)",
    "Page.setLifecycleEventsEnabled(enabled)",
    "Page.setTouchEmulationEnabled(enabled,configuration)",
    "Page.startScreencast(format,quality,maxWidth,maxHeight,everyNthFrame)",
    "Page.stopLoading",
    "Page.crash",
    "Page.close",
    "Page.setWebLifecycleState(state)",
    "Page.stopScreencast",
    "Page.produceCompilationCache(scripts)",
    "Page.addCompilationCache(url,data)",
    "Page.clearCompilationCache",
    "Page.setSPCTransactionMode(mode)",
    "Page.setRPHRegistrationMode(mode)",
    "Page.generateTestReport(message,group)",
    "Page.waitForDebugger",
    "Page.setInterceptFileChooserDialog(enabled)",
    "Page.setPrerenderingAllowed(isAllowed)",
    "Performance.disable",
    "Performance.enable(timeDomain)",
    "Performance.setTimeDomain(timeDomain)",
    "Performance.getMetrics",
    "PerformanceTimeline.enable(eventTypes)",
    "Security.disable",
    "Security.enable",
    "Security.setIgnoreCertificateErrors(ignore)",
    "Security.handleCertificateError(eventId,action)",
    "Security.setOverrideCertificateErrors(override)",
    "ServiceWorker.deliverPushMessage(origin,registrationId,data)",
    "ServiceWorker.disable",
    "ServiceWorker.dispatchSyncEvent(origin,registrationId,tag,lastChance)",
    "ServiceWorker.dispatchPeriodicSyncEvent(origin,registrationId,tag)",
    "ServiceWorker.enable",
    "ServiceWorker.inspectWorker(versionId)",
    "ServiceWorker.setForceUpdateOnPageLoad(forceUpdateOnPageLoad)",
    "ServiceWorker.skipWaiting(scopeURL)",
    "ServiceWorker.startWorker(scopeURL)",
    "ServiceWorker.stopAllWorkers",
    "ServiceWorker.stopWorker(versionId)",
    "ServiceWorker.unregister(scopeURL)",
    "ServiceWorker.updateRegistration(scopeURL)",
    "Storage.getStorageKeyForFrame(frameId)",
    "Storage.clearDataForOrigin(origin,storageTypes)",
    "Storage.clearDataForStorageKey(storageKey,storageTypes)",
    "Storage.getCookies(browserContextId)",
    "Storage.setCookies(cookies,browserContextId)",
    "Storage.clearCookies(browserContextId)",
    "Storage.getUsageAndQuota(origin)",
    "Storage.overrideQuotaForOrigin(origin,quotaSize)",
    "Storage.trackCacheStorageForOrigin(origin)",
    "Storage.trackCacheStorageForStorageKey(storageKey)",
    "Storage.trackIndexedDBForOrigin(origin)",
    "Storage.trackIndexedDBForStorageKey(storageKey)",
    "Storage.untrackCacheStorageForOrigin(origin)",
    "Storage.untrackCacheStorageForStorageKey(storageKey)",
    "Storage.untrackIndexedDBForOrigin(origin)",
    "Storage.untrackIndexedDBForStorageKey(storageKey)",
    "Storage.getTrustTokens",
    "Storage.clearTrustTokens(issuerOrigin)",
    "Storage.getInterestGroupDetails(ownerOrigin,name)",
    "Storage.setInterestGroupTracking(enable)",
    "Storage.getSharedStorageMetadata(ownerOrigin)",
    "Storage.getSharedStorageEntries(ownerOrigin)",
    "Storage.setSharedStorageEntry(ownerOrigin,key,value,ignoreIfPresent)",
    "Storage.deleteSharedStorageEntry(ownerOrigin,key)",
    "Storage.clearSharedStorageEntries(ownerOrigin)",
    "Storage.resetSharedStorageBudget(ownerOrigin)",
    "Storage.setSharedStorageTracking(enable)",
    "Storage.setStorageBucketTracking(storageKey,enable)",
    "Storage.deleteStorageBucket(bucket)",
    "Storage.runBounceTrackingMitigations",
    "Storage.setAttributionReportingLocalTestingMode(enabled)",
    "Storage.setAttributionReportingTracking(enable)",
    "SystemInfo.getInfo",
    "SystemInfo.getFeatureState(featureState)",
    "SystemInfo.getProcessInfo",
    "Target.activateTarget(targetId)",
    "Target.attachToTarget(targetId,flatten)",
    "Target.attachToBrowserTarget",
    "Target.closeTarget(targetId)",
    "Target.exposeDevToolsProtocol(targetId,bindingName)",
    "Target.createBrowserContext(disposeOnDetach,proxyServer,proxyBypassList,originsWithUniversalNetworkAccess)",
    "Target.getBrowserContexts",
    "Target.createTarget(url,width,height,browserContextId,enableBeginFrameControl,newWindow,background,forTab)",
    "Target.detachFromTarget(sessionId,targetId)",
    "Target.disposeBrowserContext(browserContextId)",
    "Target.getTargetInfo(targetId)",
    "Target.getTargets(filter)",
    "Target.sendMessageToTarget(message,sessionId,targetId)",
    "Target.setAutoAttach(autoAttach,waitForDebuggerOnStart,flatten,filter)",
    "Target.autoAttachRelated(targetId,waitForDebuggerOnStart,filter)",
    "Target.setDiscoverTargets(discover,filter)",
    "Target.setRemoteLocations(locations)",
    "Tethering.bind(port)",
    "Tethering.unbind(port)",
    "Tracing.end",
    "Tracing.getCategories",
    "Tracing.recordClockSyncMarker(syncId)",
    "Tracing.requestMemoryDump(deterministic,levelOfDetail)",
    "Tracing.start(categories,options,bufferUsageReportingInterval,transferMode,streamFormat,streamCompression,traceConfig,perfettoConfig,tracingBackend)",
    "Fetch.disable",
    "Fetch.enable(patterns,handleAuthRequests)",
    "Fetch.failRequest(requestId,errorReason)",
    "Fetch.fulfillRequest(requestId,responseCode,responseHeaders,binaryResponseHeaders,body,responsePhrase)",
    "Fetch.continueRequest(requestId,url,method,postData,headers,interceptResponse)",
    "Fetch.continueWithAuth(requestId,authChallengeResponse)",
    "Fetch.continueResponse(requestId,responseCode,responsePhrase,responseHeaders,binaryResponseHeaders)",
    "Fetch.getResponseBody(requestId)",
    "Fetch.takeResponseBodyAsStream(requestId)",
    "WebAudio.enable",
    "WebAudio.disable",
    "WebAudio.getRealtimeData(contextId)",
    "WebAuthn.enable(enableUI)",
    "WebAuthn.disable",
    "WebAuthn.addVirtualAuthenticator(options)",
    "WebAuthn.setResponseOverrideBits(authenticatorId,isBogusSignature,isBadUV,isBadUP)",
    "WebAuthn.removeVirtualAuthenticator(authenticatorId)",
    "WebAuthn.addCredential(authenticatorId,credential)",
    "WebAuthn.getCredential(authenticatorId,credentialId)",
    "WebAuthn.getCredentials(authenticatorId)",
    "WebAuthn.removeCredential(authenticatorId,credentialId)",
    "WebAuthn.clearCredentials(authenticatorId)",
    "WebAuthn.setUserVerified(authenticatorId,isUserVerified)",
    "WebAuthn.setAutomaticPresenceSimulation(authenticatorId,enabled)",
    "Media.enable",
    "Media.disable",
    "DeviceAccess.enable",
    "DeviceAccess.disable",
    "DeviceAccess.selectPrompt(id,deviceId)",
    "DeviceAccess.cancelPrompt(id)",
    "Preload.enable",
    "Preload.disable",
    "FedCm.enable(disableRejectionDelay)",
    "FedCm.disable",
    "FedCm.selectAccount(dialogId,accountIndex)",
    "FedCm.clickDialogButton(dialogId,dialogButton)",
    "FedCm.dismissDialog(dialogId,triggerCooldown)",
    "FedCm.resetCooldown",
    "Console.clearMessages",
    "Console.disable",
    "Console.enable",
    "Debugger.continueToLocation(location,targetCallFrames)",
    "Debugger.disable",
    "Debugger.enable(maxScriptsCacheSize)",
    "Debugger.evaluateOnCallFrame(callFrameId,expression,objectGroup,includeCommandLineAPI,silent,returnByValue,generatePreview,throwOnSideEffect,timeout)",
    "Debugger.getPossibleBreakpoints(start,end,restrictToFunction)",
    "Debugger.getScriptSource(scriptId)",
    "Debugger.disassembleWasmModule(scriptId)",
    "Debugger.nextWasmDisassemblyChunk(streamId)",
    "Debugger.getWasmBytecode(scriptId)",
    "Debugger.getStackTrace(stackTraceId)",
    "Debugger.pause",
    "Debugger.pauseOnAsyncCall(parentStackTraceId)",
    "Debugger.removeBreakpoint(breakpointId)",
    "Debugger.restartFrame(callFrameId,mode)",
    "Debugger.resume(terminateOnResume)",
    "Debugger.searchInContent(scriptId,query,caseSensitive,isRegex)",
    "Debugger.setAsyncCallStackDepth(maxDepth)",
    "Debugger.setBlackboxPatterns(patterns)",
    "Debugger.setBlackboxedRanges(scriptId,positions)",
    "Debugger.setBreakpoint(location,condition)",
    "Debugger.setInstrumentationBreakpoint(instrumentation)",
    "Debugger.setBreakpointByUrl(lineNumber,url,urlRegex,scriptHash,columnNumber,condition)",
    "Debugger.setBreakpointOnFunctionCall(objectId,condition)",
    "Debugger.setBreakpointsActive(active)",
    "Debugger.setPauseOnExceptions(state)",
    "Debugger.setReturnValue(newValue)",
    "Debugger.setScriptSource(scriptId,scriptSource,dryRun,allowTopFrameEditing)",
    "Debugger.setSkipAllPauses(skip)",
    "Debugger.setVariableValue(scopeNumber,variableName,newValue,callFrameId)",
    "Debugger.stepInto(breakOnAsyncCall,skipList)",
    "Debugger.stepOut",
    "Debugger.stepOver(skipList)",
    "HeapProfiler.addInspectedHeapObject(heapObjectId)",
    "HeapProfiler.collectGarbage",
    "HeapProfiler.disable",
    "HeapProfiler.enable",
    "HeapProfiler.getHeapObjectId(objectId)",
    "HeapProfiler.getObjectByHeapObjectId(objectId,objectGroup)",
    "HeapProfiler.getSamplingProfile",
    "HeapProfiler.startSampling(samplingInterval,includeObjectsCollectedByMajorGC,includeObjectsCollectedByMinorGC)",
    "HeapProfiler.startTrackingHeapObjects(trackAllocations)",
    "HeapProfiler.stopSampling",
    "HeapProfiler.stopTrackingHeapObjects(reportProgress,treatGlobalObjectsAsRoots,captureNumericValue,exposeInternals)",
    "HeapProfiler.takeHeapSnapshot(reportProgress,treatGlobalObjectsAsRoots,captureNumericValue,exposeInternals)",
    "Profiler.disable",
    "Profiler.enable",
    "Profiler.getBestEffortCoverage",
    "Profiler.setSamplingInterval(interval)",
    "Profiler.start",
    "Profiler.startPreciseCoverage(callCount,detailed,allowTriggeredUpdates)",
    "Profiler.stop",
    "Profiler.stopPreciseCoverage",
    "Profiler.takePreciseCoverage",
    "Runtime.awaitPromise(promiseObjectId,returnByValue,generatePreview)",
    "Runtime.callFunctionOn(functionDeclaration,objectId,arguments,silent,returnByValue,generatePreview,userGesture,awaitPromise,executionContextId,objectGroup,throwOnSideEffect,uniqueContextId,serializationOptions)",
    "Runtime.compileScript(expression,sourceURL,persistScript,executionContextId)",
    "Runtime.disable",
    "Runtime.discardConsoleEntries",
    "Runtime.enable",
    "Runtime.evaluate(expression,objectGroup,includeCommandLineAPI,silent,contextId,returnByValue,generatePreview,userGesture,awaitPromise,throwOnSideEffect,timeout,disableBreaks,replMode,allowUnsafeEvalBlockedByCSP,uniqueContextId,serializationOptions)",
    "Runtime.getIsolateId",
    "Runtime.getHeapUsage",
    "Runtime.getProperties(objectId,ownProperties,accessorPropertiesOnly,generatePreview,nonIndexedPropertiesOnly)",
    "Runtime.globalLexicalScopeNames(executionContextId)",
    "Runtime.queryObjects(prototypeObjectId,objectGroup)",
    "Runtime.releaseObject(objectId)",
    "Runtime.releaseObjectGroup(objectGroup)",
    "Runtime.runIfWaitingForDebugger",
    "Runtime.runScript(scriptId,executionContextId,objectGroup,silent,includeCommandLineAPI,returnByValue,generatePreview,awaitPromise)",
    "Runtime.setAsyncCallStackDepth(maxDepth)",
    "Runtime.setCustomObjectFormatterEnabled(enabled)",
    "Runtime.setMaxCallStackSizeToCapture(size)",
    "Runtime.terminateExecution",
    "Runtime.addBinding(name,executionContextId,executionContextName)",
    "Runtime.removeBinding(name)",
    "Runtime.getExceptionDetails(errorObjectId)",
    "Schema.getDomains"
  ],
  "events": [
    "Accessibility.loadComplete(root)",
    "Accessibility.nodesUpdated(nodes)",
    "Animation.animationCanceled(id)",
    "Animation.animationCreated(id)",
    "Animation.animationStarted(animation)",
    "Audits.issueAdded(issue)",
    "Autofill.addressFormFilled(filledFields,addressUi)",
    "BackgroundService.recordingStateChanged(isRecording,service)",
    "BackgroundService.backgroundServiceEventReceived(backgroundServiceEvent)",
    "Browser.downloadWillBegin(frameId,guid,url,suggestedFilename)",
    "Browser.downloadProgress(guid,totalBytes,receivedBytes,state)",
    "CSS.fontsUpdated(font)",
    "CSS.mediaQueryResultChanged",
    "CSS.styleSheetAdded(header)",
    "CSS.styleSheetChanged(styleSheetId)",
    "CSS.styleSheetRemoved(styleSheetId)",
    "Cast.sinksUpdated(sinks)",
    "Cast.issueUpdated(issueMessage)",
    "DOM.attributeModified(nodeId,name,value)",
    "DOM.attributeRemoved(nodeId,name)",
    "DOM.characterDataModified(nodeId,characterData)",
    "DOM.childNodeCountUpdated(nodeId,childNodeCount)",
    "DOM.childNodeInserted(parentNodeId,previousNodeId,node)",
    "DOM.childNodeRemoved(parentNodeId,nodeId)",
    "DOM.distributedNodesUpdated(insertionPointId,distributedNodes)",
    "DOM.documentUpdated",
    "DOM.inlineStyleInvalidated(nodeIds)",
    "DOM.pseudoElementAdded(parentId,pseudoElement)",
    "DOM.topLayerElementsUpdated",
    "DOM.pseudoElementRemoved(parentId,pseudoElementId)",
    "DOM.setChildNodes(parentId,nodes)",
    "DOM.shadowRootPopped(hostId,rootId)",
    "DOM.shadowRootPushed(hostId,root)",
    "DOMStorage.domStorageItemAdded(storageId,key,newValue)",
    "DOMStorage.domStorageItemRemoved(storageId,key)",
    "DOMStorage.domStorageItemUpdated(storageId,key,oldValue,newValue)",
    "DOMStorage.domStorageItemsCleared(storageId)",
    "Database.addDatabase(database)",
    "Emulation.virtualTimeBudgetExpired",
    "Input.dragIntercepted(data)",
    "Inspector.detached(reason)",
    "Inspector.targetCrashed",
    "Inspector.targetReloadedAfterCrash",
    "LayerTree.layerPainted(layerId,clip)",
    "LayerTree.layerTreeDidChange(layers)",
    "Log.entryAdded(entry)",
    "Network.dataReceived(requestId,timestamp,dataLength,encodedDataLength)",
    "Network.eventSourceMessageReceived(requestId,timestamp,eventName,eventId,data)",
    "Network.loadingFailed(requestId,timestamp,type,errorText,canceled,blockedReason,corsErrorStatus)",
    "Network.loadingFinished(requestId,timestamp,encodedDataLength)",
    "Network.requestIntercepted(interceptionId,request,frameId,resourceType,isNavigationRequest,isDownload,redirectUrl,authChallenge,responseErrorReason,responseStatusCode,responseHeaders,requestId)",
    "Network.requestServedFromCache(requestId)",
    "Network.requestWillBeSent(requestId,loaderId,documentURL,request,timestamp,wallTime,initiator,redirectHasExtraInfo,redirectResponse,type,frameId,hasUserGesture)",
    "Network.resourceChangedPriority(requestId,newPriority,timestamp)",
    "Network.signedExchangeReceived(requestId,info)",
    "Network.responseReceived(requestId,loaderId,timestamp,type,response,hasExtraInfo,frameId)",
    "Network.webSocketClosed(requestId,timestamp)",
    "Network.webSocketCreated(requestId,url,initiator)",
    "Network.webSocketFrameError(requestId,timestamp,errorMessage)",
    "Network.webSocketFrameReceived(requestId,timestamp,response)",
    "Network.webSocketFrameSent(requestId,timestamp,response)",
    "Network.webSocketHandshakeResponseReceived(requestId,timestamp,response)",
    "Network.webSocketWillSendHandshakeRequest(requestId,timestamp,wallTime,request)",
    "Network.webTransportCreated(transportId,url,timestamp,initiator)",
    "Network.webTransportConnectionEstablished(transportId,timestamp)",
    "Network.webTransportClosed(transportId,timestamp)",
    "Network.requestWillBeSentExtraInfo(requestId,associatedCookies,headers,connectTiming,clientSecurityState,siteHasCookieInOtherPartition)",
    "Network.responseReceivedExtraInfo(requestId,blockedCookies,headers,resourceIPAddressSpace,statusCode,headersText,cookiePartitionKey,cookiePartitionKeyOpaque)",
    "Network.trustTokenOperationDone(status,type,requestId,topLevelOrigin,issuerOrigin,issuedTokenCount)",
    "Network.subresourceWebBundleMetadataReceived(requestId,urls)",
    "Network.subresourceWebBundleMetadataError(requestId,errorMessage)",
    "Network.subresourceWebBundleInnerResponseParsed(innerRequestId,innerRequestURL,bundleRequestId)",
    "Network.subresourceWebBundleInnerResponseError(innerRequestId,innerRequestURL,errorMessage,bundleRequestId)",
    "Network.reportingApiReportAdded(report)",
    "Network.reportingApiReportUpdated(report)",
    "Network.reportingApiEndpointsChangedForOrigin(origin,endpoints)",
    "Overlay.inspectNodeRequested(backendNodeId)",
    "Overlay.nodeHighlightRequested(nodeId)",
    "Overlay.screenshotRequested(viewport)",
    "Overlay.inspectModeCanceled",
    "Page.domContentEventFired(timestamp)",
    "Page.fileChooserOpened(frameId,mode,backendNodeId)",
    "Page.frameAttached(frameId,parentFrameId,stack)",
    "Page.frameClearedScheduledNavigation(frameId)",
    "Page.frameDetached(frameId,reason)",
    "Page.frameNavigated(frame,type)",
    "Page.documentOpened(frame)",
    "Page.frameResized",
    "Page.frameRequestedNavigation(frameId,reason,url,disposition)",
    "Page.frameScheduledNavigation(frameId,delay,reason,url)",
    "Page.frameStartedLoading(frameId)",
    "Page.frameStoppedLoading(frameId)",
    "Page.downloadWillBegin(frameId,guid,url,suggestedFilename)",
    "Page.downloadProgress(guid,totalBytes,receivedBytes,state)",
    "Page.interstitialHidden",
    "Page.interstitialShown",
    "Page.javascriptDialogClosed(result,userInput)",
    "Page.javascriptDialogOpening(url,message,type,hasBrowserHandler,defaultPrompt)",
    "Page.lifecycleEvent(frameId,loaderId,name,timestamp)",
    "Page.backForwardCacheNotUsed(loaderId,frameId,notRestoredExplanations,notRestoredExplanationsTree)",
    "Page.loadEventFired(timestamp)",
    "Page.navigatedWithinDocument(frameId,url)",
    "Page.screencastFrame(data,metadata,sessionId)",
    "Page.screencastVisibilityChanged(visible)",
    "Page.windowOpen(url,windowName,windowFeatures,userGesture)",
    "Page.compilationCacheProduced(url,data)",
    "Performance.metrics(metrics,title)",
    "PerformanceTimeline.timelineEventAdded(event)",
    "Security.certificateError(eventId,errorType,requestURL)",
    "Security.visibleSecurityStateChanged(visibleSecurityState)",
    "Security.securityStateChanged(securityState,schemeIsCryptographic,explanations,insecureContentStatus,summary)",
    "ServiceWorker.workerErrorReported(errorMessage)",
    "ServiceWorker.workerRegistrationUpdated(registrations)",
    "ServiceWorker.workerVersionUpdated(versions)",
    "Storage.cacheStorageContentUpdated(origin,storageKey,bucketId,cacheName)",
    "Storage.cacheStorageListUpdated(origin,storageKey,bucketId)",
    "Storage.indexedDBContentUpdated(origin,storageKey,bucketId,databaseName,objectStoreName)",
    "Storage.indexedDBListUpdated(origin,storageKey,bucketId)",
    "Storage.interestGroupAccessed(accessTime,type,ownerOrigin,name)",
    "Storage.sharedStorageAccessed(accessTime,type,mainFrameId,ownerOrigin,params)",
    "Storage.storageBucketCreatedOrUpdated(bucketInfo)",
    "Storage.storageBucketDeleted(bucketId)",
    "Storage.attributionReportingSourceRegistered(registration,result)",
    "Target.attachedToTarget(sessionId,targetInfo,waitingForDebugger)",
    "Target.detachedFromTarget(sessionId,targetId)",
    "Target.receivedMessageFromTarget(sessionId,message,targetId)",
    "Target.targetCreated(targetInfo)",
    "Target.targetDestroyed(targetId)",
    "Target.targetCrashed(targetId,status,errorCode)",
    "Target.targetInfoChanged(targetInfo)",
    "Tethering.accepted(port,connectionId)",
    "Tracing.bufferUsage(percentFull,eventCount,value)",
    "Tracing.dataCollected(value)",
    "Tracing.tracingComplete(dataLossOccurred,stream,traceFormat,streamCompression)",
    "Fetch.requestPaused(requestId,request,frameId,resourceType,responseErrorReason,responseStatusCode,responseStatusText,responseHeaders,networkId,redirectedRequestId)",
    "Fetch.authRequired(requestId,request,frameId,resourceType,authChallenge)",
    "WebAudio.contextCreated(context)",
    "WebAudio.contextWillBeDestroyed(contextId)",
    "WebAudio.contextChanged(context)",
    "WebAudio.audioListenerCreated(listener)",
    "WebAudio.audioListenerWillBeDestroyed(contextId,listenerId)",
    "WebAudio.audioNodeCreated(node)",
    "WebAudio.audioNodeWillBeDestroyed(contextId,nodeId)",
    "WebAudio.audioParamCreated(param)",
    "WebAudio.audioParamWillBeDestroyed(contextId,nodeId,paramId)",
    "WebAudio.nodesConnected(contextId,sourceId,destinationId,sourceOutputIndex,destinationInputIndex)",
    "WebAudio.nodesDisconnected(contextId,sourceId,destinationId,sourceOutputIndex,destinationInputIndex)",
    "WebAudio.nodeParamConnected(contextId,sourceId,destinationId,sourceOutputIndex)",
    "WebAudio.nodeParamDisconnected(contextId,sourceId,destinationId,sourceOutputIndex)",
    "WebAuthn.credentialAdded(authenticatorId,credential)",
    "WebAuthn.credentialAsserted(authenticatorId,credential)",
    "Media.playerPropertiesChanged(playerId,properties)",
    "Media.playerEventsAdded(playerId,events)",
    "Media.playerMessagesLogged(playerId,messages)",
    "Media.playerErrorsRaised(playerId,errors)",
    "Media.playersCreated(players)",
    "DeviceAccess.deviceRequestPrompted(id,devices)",
    "Preload.ruleSetUpdated(ruleSet)",
    "Preload.ruleSetRemoved(id)",
    "Preload.preloadEnabledStateUpdated(disabledByPreference,disabledByDataSaver,disabledByBatterySaver,disabledByHoldbackPrefetchSpeculationRules,disabledByHoldbackPrerenderSpeculationRules)",
    "Preload.prefetchStatusUpdated(key,initiatingFrameId,prefetchUrl,status,prefetchStatus,requestId)",
    "Preload.prerenderStatusUpdated(key,status,prerenderStatus,disallowedMojoInterface,mismatchedHeaders)",
    "Preload.preloadingAttemptSourcesUpdated(loaderId,preloadingAttemptSources)",
    "FedCm.dialogShown(dialogId,dialogType,accounts,title,subtitle)",
    "Console.messageAdded(message)",
    "Debugger.breakpointResolved(breakpointId,location)",
    "Debugger.paused(callFrames,reason,data,hitBreakpoints,asyncStackTrace,asyncStackTraceId,asyncCallStackTraceId)",
    "Debugger.resumed",
    "Debugger.scriptFailedToParse(scriptId,url,startLine,startColumn,endLine,endColumn,executionContextId,hash,executionContextAuxData,sourceMapURL,hasSourceURL,isModule,length,stackTrace,codeOffset,scriptLanguage,embedderName)",
    "Debugger.scriptParsed(scriptId,url,startLine,startColumn,endLine,endColumn,executionContextId,hash,executionContextAuxData,isLiveEdit,sourceMapURL,hasSourceURL,isModule,length,stackTrace,codeOffset,scriptLanguage,debugSymbols,embedderName)",
    "HeapProfiler.addHeapSnapshotChunk(chunk)",
    "HeapProfiler.heapStatsUpdate(statsUpdate)",
    "HeapProfiler.lastSeenObjectId(lastSeenObjectId,timestamp)",
    "HeapProfiler.reportHeapSnapshotProgress(done,total,finished)",
    "HeapProfiler.resetProfiles",
    "Profiler.consoleProfileFinished(id,location,profile,title)",
    "Profiler.consoleProfileStarted(id,location,title)",
    "Profiler.preciseCoverageDeltaUpdate(timestamp,occasion,result)",
    "Runtime.bindingCalled(name,payload,executionContextId)",
    "Runtime.consoleAPICalled(type,args,executionContextId,timestamp,stackTrace,context)",
    "Runtime.exceptionRevoked(reason,exceptionId)",
    "Runtime.exceptionThrown(timestamp,exceptionDetails)",
    "Runtime.executionContextCreated(context)",
    "Runtime.executionContextDestroyed(executionContextId,executionContextUniqueId)",
    "Runtime.executionContextsCleared",
    "Runtime.inspectRequested(object,hints,executionContextId)"
  ]
}