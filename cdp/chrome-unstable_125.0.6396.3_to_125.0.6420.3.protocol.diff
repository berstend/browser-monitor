--- ./cdp/chrome-unstable_125.0.6396.3.protocol.json	2024-04-17 00:55:26.549797871 +0000
+++ ./cdp/chrome-unstable_125.0.6420.3.protocol.json	2024-04-17 00:56:02.422093004 +0000
@@ -965,6 +965,17 @@
               "$ref": "Animation"
             }
           ]
+        },
+        {
+          "name": "animationUpdated",
+          "description": "Event for animation that has been updated.",
+          "parameters": [
+            {
+              "name": "animation",
+              "description": "Animation that was updated.",
+              "$ref": "Animation"
+            }
+          ]
         }
       ]
     },
@@ -1705,7 +1716,9 @@
             "RpPageNotVisible",
             "SilentMediationFailure",
             "ThirdPartyCookiesBlocked",
-            "NotSignedInWithIdp"
+            "NotSignedInWithIdp",
+            "MissingTransientUserActivation",
+            "ReplacedByButtonMode"
           ]
         },
         {
@@ -5464,6 +5477,8 @@
             "grammar-error",
             "highlight",
             "first-line-inherited",
+            "scroll-marker",
+            "scroll-markers",
             "scrollbar",
             "scrollbar-thumb",
             "scrollbar-button",
@@ -17465,6 +17480,375 @@
           ]
         },
         {
+          "id": "FileFilter",
+          "experimental": true,
+          "type": "object",
+          "properties": [
+            {
+              "name": "name",
+              "optional": true,
+              "type": "string"
+            },
+            {
+              "name": "accepts",
+              "optional": true,
+              "type": "array",
+              "items": {
+                "type": "string"
+              }
+            }
+          ]
+        },
+        {
+          "id": "FileHandler",
+          "experimental": true,
+          "type": "object",
+          "properties": [
+            {
+              "name": "action",
+              "type": "string"
+            },
+            {
+              "name": "name",
+              "type": "string"
+            },
+            {
+              "name": "icons",
+              "optional": true,
+              "type": "array",
+              "items": {
+                "$ref": "ImageResource"
+              }
+            },
+            {
+              "name": "accepts",
+              "description": "Mimic a map, name is the key, accepts is the value.",
+              "optional": true,
+              "type": "array",
+              "items": {
+                "$ref": "FileFilter"
+              }
+            },
+            {
+              "name": "launchType",
+              "description": "Won't repeat the enums, using string for easy comparison. Same as the\nother enums below.",
+              "type": "string"
+            }
+          ]
+        },
+        {
+          "id": "ImageResource",
+          "description": "The image definition used in both icon and screenshot.",
+          "experimental": true,
+          "type": "object",
+          "properties": [
+            {
+              "name": "url",
+              "description": "The src field in the definition, but changing to url in favor of\nconsistency.",
+              "type": "string"
+            },
+            {
+              "name": "sizes",
+              "optional": true,
+              "type": "string"
+            },
+            {
+              "name": "type",
+              "optional": true,
+              "type": "string"
+            }
+          ]
+        },
+        {
+          "id": "LaunchHandler",
+          "experimental": true,
+          "type": "object",
+          "properties": [
+            {
+              "name": "clientMode",
+              "type": "string"
+            }
+          ]
+        },
+        {
+          "id": "ProtocolHandler",
+          "experimental": true,
+          "type": "object",
+          "properties": [
+            {
+              "name": "protocol",
+              "type": "string"
+            },
+            {
+              "name": "url",
+              "type": "string"
+            }
+          ]
+        },
+        {
+          "id": "RelatedApplication",
+          "experimental": true,
+          "type": "object",
+          "properties": [
+            {
+              "name": "id",
+              "optional": true,
+              "type": "string"
+            },
+            {
+              "name": "url",
+              "type": "string"
+            }
+          ]
+        },
+        {
+          "id": "ScopeExtension",
+          "experimental": true,
+          "type": "object",
+          "properties": [
+            {
+              "name": "origin",
+              "description": "Instead of using tuple, this field always returns the serialized string\nfor easy understanding and comparison.",
+              "type": "string"
+            },
+            {
+              "name": "hasOriginWildcard",
+              "type": "boolean"
+            }
+          ]
+        },
+        {
+          "id": "Screenshot",
+          "experimental": true,
+          "type": "object",
+          "properties": [
+            {
+              "name": "image",
+              "$ref": "ImageResource"
+            },
+            {
+              "name": "formFactor",
+              "type": "string"
+            },
+            {
+              "name": "label",
+              "optional": true,
+              "type": "string"
+            }
+          ]
+        },
+        {
+          "id": "ShareTarget",
+          "experimental": true,
+          "type": "object",
+          "properties": [
+            {
+              "name": "action",
+              "type": "string"
+            },
+            {
+              "name": "method",
+              "type": "string"
+            },
+            {
+              "name": "enctype",
+              "type": "string"
+            },
+            {
+              "name": "title",
+              "description": "Embed the ShareTargetParams",
+              "optional": true,
+              "type": "string"
+            },
+            {
+              "name": "text",
+              "optional": true,
+              "type": "string"
+            },
+            {
+              "name": "url",
+              "optional": true,
+              "type": "string"
+            },
+            {
+              "name": "files",
+              "optional": true,
+              "type": "array",
+              "items": {
+                "$ref": "FileFilter"
+              }
+            }
+          ]
+        },
+        {
+          "id": "Shortcut",
+          "experimental": true,
+          "type": "object",
+          "properties": [
+            {
+              "name": "name",
+              "type": "string"
+            },
+            {
+              "name": "url",
+              "type": "string"
+            }
+          ]
+        },
+        {
+          "id": "WebAppManifest",
+          "experimental": true,
+          "type": "object",
+          "properties": [
+            {
+              "name": "backgroundColor",
+              "optional": true,
+              "type": "string"
+            },
+            {
+              "name": "description",
+              "description": "The extra description provided by the manifest.",
+              "optional": true,
+              "type": "string"
+            },
+            {
+              "name": "dir",
+              "optional": true,
+              "type": "string"
+            },
+            {
+              "name": "display",
+              "optional": true,
+              "type": "string"
+            },
+            {
+              "name": "displayOverrides",
+              "description": "The overrided display mode controlled by the user.",
+              "optional": true,
+              "type": "array",
+              "items": {
+                "type": "string"
+              }
+            },
+            {
+              "name": "fileHandlers",
+              "description": "The handlers to open files.",
+              "optional": true,
+              "type": "array",
+              "items": {
+                "$ref": "FileHandler"
+              }
+            },
+            {
+              "name": "icons",
+              "optional": true,
+              "type": "array",
+              "items": {
+                "$ref": "ImageResource"
+              }
+            },
+            {
+              "name": "id",
+              "optional": true,
+              "type": "string"
+            },
+            {
+              "name": "lang",
+              "optional": true,
+              "type": "string"
+            },
+            {
+              "name": "launchHandler",
+              "description": "TODO(crbug.com/1231886): This field is non-standard and part of a Chrome\nexperiment. See:\nhttps://github.com/WICG/web-app-launch/blob/main/launch_handler.md",
+              "optional": true,
+              "$ref": "LaunchHandler"
+            },
+            {
+              "name": "name",
+              "optional": true,
+              "type": "string"
+            },
+            {
+              "name": "orientation",
+              "optional": true,
+              "type": "string"
+            },
+            {
+              "name": "preferRelatedApplications",
+              "optional": true,
+              "type": "boolean"
+            },
+            {
+              "name": "protocolHandlers",
+              "description": "The handlers to open protocols.",
+              "optional": true,
+              "type": "array",
+              "items": {
+                "$ref": "ProtocolHandler"
+              }
+            },
+            {
+              "name": "relatedApplications",
+              "optional": true,
+              "type": "array",
+              "items": {
+                "$ref": "RelatedApplication"
+              }
+            },
+            {
+              "name": "scope",
+              "optional": true,
+              "type": "string"
+            },
+            {
+              "name": "scopeExtensions",
+              "description": "Non-standard, see\nhttps://github.com/WICG/manifest-incubations/blob/gh-pages/scope_extensions-explainer.md",
+              "optional": true,
+              "type": "array",
+              "items": {
+                "$ref": "ScopeExtension"
+              }
+            },
+            {
+              "name": "screenshots",
+              "description": "The screenshots used by chromium.",
+              "optional": true,
+              "type": "array",
+              "items": {
+                "$ref": "Screenshot"
+              }
+            },
+            {
+              "name": "shareTarget",
+              "optional": true,
+              "$ref": "ShareTarget"
+            },
+            {
+              "name": "shortName",
+              "optional": true,
+              "type": "string"
+            },
+            {
+              "name": "shortcuts",
+              "optional": true,
+              "type": "array",
+              "items": {
+                "$ref": "Shortcut"
+              }
+            },
+            {
+              "name": "startUrl",
+              "optional": true,
+              "type": "string"
+            },
+            {
+              "name": "themeColor",
+              "optional": true,
+              "type": "string"
+            }
+          ]
+        },
+        {
           "id": "AutoResponseMode",
           "description": "Enum of possible auto-response for permission / prompt dialogs.",
           "experimental": true,
@@ -17947,6 +18331,14 @@
         },
         {
           "name": "getAppManifest",
+          "description": "Gets the processed manifest for this current document.\n  This API always waits for the manifest to be loaded.\n  If manifestId is provided, and it does not match the manifest of the\n    current document, this API errors out.\n  If there isn’t a loaded page, this API errors out immediately.",
+          "parameters": [
+            {
+              "name": "manifestId",
+              "optional": true,
+              "type": "string"
+            }
+          ],
           "returns": [
             {
               "name": "url",
@@ -17968,10 +18360,16 @@
             },
             {
               "name": "parsed",
-              "description": "Parsed manifest properties",
+              "description": "Parsed manifest properties. Deprecated, use manifest instead.",
               "experimental": true,
+              "deprecated": true,
               "optional": true,
               "$ref": "AppManifestParsedProperties"
+            },
+            {
+              "name": "manifest",
+              "experimental": true,
+              "$ref": "WebAppManifest"
             }
           ]
         },
@@ -25580,6 +25978,79 @@
         }
       ]
     },
+    {
+      "domain": "PWA",
+      "description": "This domain allows interacting with the browser to control PWAs.",
+      "experimental": true,
+      "types": [
+        {
+          "id": "FileHandlerAccept",
+          "description": "The following types are the replica of\nhttps://crsrc.org/c/chrome/browser/web_applications/proto/web_app_os_integration_state.proto;drc=9910d3be894c8f142c977ba1023f30a656bc13fc;l=67",
+          "type": "object",
+          "properties": [
+            {
+              "name": "mediaType",
+              "description": "New name of the mimetype according to\nhttps://www.iana.org/assignments/media-types/media-types.xhtml",
+              "type": "string"
+            },
+            {
+              "name": "fileExtensions",
+              "type": "array",
+              "items": {
+                "type": "string"
+              }
+            }
+          ]
+        },
+        {
+          "id": "FileHandler",
+          "type": "object",
+          "properties": [
+            {
+              "name": "action",
+              "type": "string"
+            },
+            {
+              "name": "accepts",
+              "type": "array",
+              "items": {
+                "$ref": "FileHandlerAccept"
+              }
+            },
+            {
+              "name": "displayName",
+              "type": "string"
+            }
+          ]
+        }
+      ],
+      "commands": [
+        {
+          "name": "getOsAppState",
+          "description": "Returns the following OS state for the given manifest id.",
+          "parameters": [
+            {
+              "name": "manifestId",
+              "description": "The id from the webapp's manifest file, commonly it's the url of the\nsite installing the webapp. See\nhttps://web.dev/learn/pwa/web-app-manifest.",
+              "type": "string"
+            }
+          ],
+          "returns": [
+            {
+              "name": "badgeCount",
+              "type": "integer"
+            },
+            {
+              "name": "fileHandlers",
+              "type": "array",
+              "items": {
+                "$ref": "FileHandler"
+              }
+            }
+          ]
+        }
+      ]
+    },
     {
       "domain": "Console",
       "description": "This domain is deprecated - use Runtime or Log instead.",
