--- ./cdp/chrome-unstable_127.0.6510.4.protocol.json	2024-06-08 00:59:33.670708703 +0000
+++ ./cdp/chrome-unstable_127.0.6523.4.protocol.json	2024-06-08 00:59:56.006831190 +0000
@@ -1220,6 +1220,8 @@
             "CoopSandboxedIFrameCannotNavigateToCoopPage",
             "CorpNotSameOrigin",
             "CorpNotSameOriginAfterDefaultedToSameOriginByCoep",
+            "CorpNotSameOriginAfterDefaultedToSameOriginByDip",
+            "CorpNotSameOriginAfterDefaultedToSameOriginByCoepAndDip",
             "CorpNotSameSite"
           ]
         },
@@ -12487,6 +12489,8 @@
             "coop-sandboxed-iframe-cannot-navigate-to-coop-page",
             "corp-not-same-origin",
             "corp-not-same-origin-after-defaulted-to-same-origin-by-coep",
+            "corp-not-same-origin-after-defaulted-to-same-origin-by-dip",
+            "corp-not-same-origin-after-defaulted-to-same-origin-by-coep-and-dip",
             "corp-not-same-site"
           ]
         },
@@ -12964,6 +12968,24 @@
           ]
         },
         {
+          "id": "CookiePartitionKey",
+          "description": "cookiePartitionKey object\nThe representation of the components of the key that are created by the cookiePartitionKey class contained in net/cookies/cookie_partition_key.h.",
+          "experimental": true,
+          "type": "object",
+          "properties": [
+            {
+              "name": "topLevelSite",
+              "description": "The site of the top-level URL the browser was visiting at the start\nof the request to the endpoint that set the cookie.",
+              "type": "string"
+            },
+            {
+              "name": "hasCrossSiteAncestor",
+              "description": "Indicates if the cookie has any ancestors that are cross-site to the topLevelSite.",
+              "type": "boolean"
+            }
+          ]
+        },
+        {
           "id": "Cookie",
           "description": "Cookie object",
           "type": "object",
@@ -13046,10 +13068,10 @@
             },
             {
               "name": "partitionKey",
-              "description": "Cookie partition key. The site of the top-level URL the browser was visiting at the start\nof the request to the endpoint that set the cookie.",
+              "description": "Cookie partition key.",
               "experimental": true,
               "optional": true,
-              "type": "string"
+              "$ref": "CookiePartitionKey"
             },
             {
               "name": "partitionKeyOpaque",
@@ -13296,10 +13318,10 @@
             },
             {
               "name": "partitionKey",
-              "description": "Cookie partition key. The site of the top-level URL the browser was visiting at the start\nof the request to the endpoint that set the cookie.\nIf not set, the cookie will be set as not partitioned.",
+              "description": "Cookie partition key. If not set, the cookie will be set as not partitioned.",
               "experimental": true,
               "optional": true,
-              "type": "string"
+              "$ref": "CookiePartitionKey"
             }
           ]
         },
@@ -14051,10 +14073,10 @@
             },
             {
               "name": "partitionKey",
-              "description": "If specified, deletes only cookies with the the given name and partitionKey where domain\nmatches provided URL.",
+              "description": "If specified, deletes only cookies with the the given name and partitionKey where\nwhere all partition key attributes match the cookie partition key attribute.",
               "experimental": true,
               "optional": true,
-              "type": "string"
+              "$ref": "CookiePartitionKey"
             }
           ]
         },
@@ -14458,10 +14480,10 @@
             },
             {
               "name": "partitionKey",
-              "description": "Cookie partition key. The site of the top-level URL the browser was visiting at the start\nof the request to the endpoint that set the cookie.\nIf not set, the cookie will be set as not partitioned.",
+              "description": "Cookie partition key. If not set, the cookie will be set as not partitioned.",
               "experimental": true,
               "optional": true,
-              "type": "string"
+              "$ref": "CookiePartitionKey"
             }
           ],
           "returns": [
@@ -15297,8 +15319,9 @@
             {
               "name": "cookiePartitionKey",
               "description": "The cookie partition key that will be used to store partitioned cookies set in this response.\nOnly sent when partitioned cookies are enabled.",
+              "experimental": true,
               "optional": true,
-              "type": "string"
+              "$ref": "CookiePartitionKey"
             },
             {
               "name": "cookiePartitionKeyOpaque",
@@ -15350,7 +15373,7 @@
                 "FailedPrecondition",
                 "ResourceExhausted",
                 "AlreadyExists",
-                "Unavailable",
+                "ResourceLimited",
                 "Unauthorized",
                 "BadResponse",
                 "InternalError",
@@ -16795,6 +16818,7 @@
             "clipboard-write",
             "compute-pressure",
             "cross-origin-isolated",
+            "deferred-fetch",
             "direct-sockets",
             "display-capture",
             "document-domain",
@@ -26253,7 +26277,7 @@
         },
         {
           "name": "launch",
-          "description": "Launches the installed web app, or an url in the same web app instead of the\ndefault start url if it is provided. Returns a tab / web contents based\nTarget.TargetID which can be used to attach to via Target.attachToTarget or\nsimilar APIs.",
+          "description": "Launches the installed web app, or an url in the same web app instead of the\ndefault start url if it is provided. Returns a page Target.TargetID which\ncan be used to attach to via Target.attachToTarget or similar APIs.",
           "parameters": [
             {
               "name": "manifestId",
@@ -26275,7 +26299,7 @@
         },
         {
           "name": "launchFilesInApp",
-          "description": "Opens one or more local files from an installed web app identified by its\nmanifestId. The web app needs to have file handlers registered to process\nthe files. The API returns one or more tabs / web contents' based\nTarget.TargetIDs which can be used to attach to via Target.attachToTarget or\nsimilar APIs.\nIf some files in the parameters cannot be handled by the web app, they will\nbe ignored. If none of the files can be handled, this API returns an error.\nIf no files provided as the parameter, this API also returns an error.\n\nAccording to the definition of the file handlers in the manifest file, one\nTarget.TargetID may represent a tab handling one or more files. The order of\nthe returned Target.TargetIDs is also not guaranteed.\n\nTODO(crbug.com/339454034): Check the existences of the input files.",
+          "description": "Opens one or more local files from an installed web app identified by its\nmanifestId. The web app needs to have file handlers registered to process\nthe files. The API returns one or more page Target.TargetIDs which can be\nused to attach to via Target.attachToTarget or similar APIs.\nIf some files in the parameters cannot be handled by the web app, they will\nbe ignored. If none of the files can be handled, this API returns an error.\nIf no files provided as the parameter, this API also returns an error.\n\nAccording to the definition of the file handlers in the manifest file, one\nTarget.TargetID may represent a page handling one or more files. The order\nof the returned Target.TargetIDs is not guaranteed.\n\nTODO(crbug.com/339454034): Check the existences of the input files.",
           "parameters": [
             {
               "name": "manifestId",
@@ -26299,6 +26323,16 @@
               }
             }
           ]
+        },
+        {
+          "name": "openCurrentPageInApp",
+          "description": "Opens the current page in its web app identified by the manifest id, needs\nto be called on a page target. This function returns immediately without\nwaiting for the app finishing loading.",
+          "parameters": [
+            {
+              "name": "manifestId",
+              "type": "string"
+            }
+          ]
         }
       ]
     },
