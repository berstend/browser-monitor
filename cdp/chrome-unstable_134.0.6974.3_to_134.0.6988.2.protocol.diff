--- ./cdp/chrome-unstable_134.0.6974.3.protocol.json	2025-02-01 01:14:00.534099377 +0000
+++ ./cdp/chrome-unstable_134.0.6988.2.protocol.json	2025-02-01 01:14:35.742521600 +0000
@@ -13696,7 +13696,8 @@
             "EnterprisePolicy",
             "StorageAccess",
             "TopLevelStorageAccess",
-            "Scheme"
+            "Scheme",
+            "SameSiteNoneCookiesInSandbox"
           ]
         },
         {
@@ -20260,6 +20261,42 @@
           "experimental": true
         },
         {
+          "name": "frameStartedNavigating",
+          "description": "Fired when a navigation starts. This event is fired for both\nrenderer-initiated and browser-initiated navigations. For renderer-initiated\nnavigations, the event is fired after `frameRequestedNavigation`.\nNavigation may still be cancelled after the event is issued. Multiple events\ncan be fired for a single navigation, for example, when a same-document\nnavigation becomes a cross-document navigation (such as in the case of a\nframeset).",
+          "experimental": true,
+          "parameters": [
+            {
+              "name": "frameId",
+              "description": "ID of the frame that is being navigated.",
+              "$ref": "FrameId"
+            },
+            {
+              "name": "url",
+              "description": "The URL the navigation started with. The final URL can be different.",
+              "type": "string"
+            },
+            {
+              "name": "loaderId",
+              "description": "Loader identifier. Even though it is present in case of same-document\nnavigation, the previously committed loaderId would not change unless\nthe navigation changes from a same-document to a cross-document\nnavigation.",
+              "$ref": "Network.LoaderId"
+            },
+            {
+              "name": "navigationType",
+              "type": "string",
+              "enum": [
+                "reload",
+                "reloadBypassingCache",
+                "restore",
+                "restoreWithPost",
+                "historySameDocument",
+                "historyDifferentDocument",
+                "sameDocument",
+                "differentDocument"
+              ]
+            }
+          ]
+        },
+        {
           "name": "frameRequestedNavigation",
           "description": "Fired when a renderer-initiated navigation is requested.\nNavigation may still be cancelled after the event is issued.",
           "experimental": true,
@@ -27746,6 +27783,22 @@
               "type": "string"
             }
           ]
+        },
+        {
+          "id": "ResolvedBreakpoint",
+          "type": "object",
+          "properties": [
+            {
+              "name": "breakpointId",
+              "description": "Breakpoint unique identifier.",
+              "$ref": "BreakpointId"
+            },
+            {
+              "name": "location",
+              "description": "Actual breakpoint location.",
+              "$ref": "Location"
+            }
+          ]
         }
       ],
       "commands": [
@@ -28540,7 +28593,8 @@
       "events": [
         {
           "name": "breakpointResolved",
-          "description": "Fired when breakpoint is resolved to an actual script and location.",
+          "description": "Fired when breakpoint is resolved to an actual script and location.\nDeprecated in favor of `resolvedBreakpoints` in the `scriptParsed` event.",
+          "deprecated": true,
           "parameters": [
             {
               "name": "breakpointId",
@@ -28860,6 +28914,16 @@
               "experimental": true,
               "optional": true,
               "type": "string"
+            },
+            {
+              "name": "resolvedBreakpoints",
+              "description": "The list of set breakpoints in this script if calls to `setBreakpointByUrl`\nmatches this script's URL or hash. Clients that use this list can ignore the\n`breakpointResolved` event. They are equivalent.",
+              "experimental": true,
+              "optional": true,
+              "type": "array",
+              "items": {
+                "$ref": "ResolvedBreakpoint"
+              }
             }
           ]
         }
@@ -30600,12 +30664,22 @@
           "returns": [
             {
               "name": "usedSize",
-              "description": "Used heap size in bytes.",
+              "description": "Used JavaScript heap size in bytes.",
               "type": "number"
             },
             {
               "name": "totalSize",
-              "description": "Allocated heap size in bytes.",
+              "description": "Allocated JavaScript heap size in bytes.",
+              "type": "number"
+            },
+            {
+              "name": "embedderHeapUsedSize",
+              "description": "Used size in bytes in the embedder's garbage-collected heap.",
+              "type": "number"
+            },
+            {
+              "name": "backingStorageSize",
+              "description": "Size in bytes of backing storage for array buffers and external strings.",
               "type": "number"
             }
           ]
